{"ast":null,"code":"// import { inject } from 'vue';\nimport { hostname, port } from \"@/socketconfig\";\nimport Socket from \"@/socket\";\nimport { UUserRequest, UQuery\n// UUserResponse,\n} from \"@/ups_user_pb\";\nexport default {\n  data() {\n    return {\n      packageId: '',\n      userId: ''\n    };\n  },\n  // setup() {\n  //   const socket = inject('$socket');\n  //   return { socket };\n  // },\n  methods: {\n    async queryOrder() {\n      console.log(\"query Start!\");\n      const query = new UQuery();\n      query.packageId = this.packageId;\n      query.userId = this.userId;\n      const request = new UUserRequest();\n      request.queryCommand = query;\n      const socket = new Socket(`ws://${hostname}:${port}`);\n      await socket.connect();\n      socket.onopen = () => {\n        console.log(\"Socket connection successful!\");\n        // 在这里可以进行后续操作，如发送数据等\n        this.socket.send(\"queryOrder\", request);\n      };\n      socket.onerror = error => {\n        console.error(\"WebSocket error: \", error);\n        console.log(\"fail\"); // 打印失败信息\n      };\n\n      // const binaryPayload = await this.$socket.onMessage(\"queryOrderResponse\");\n\n      // const response = UUserResponse.deserializeBinary(binaryPayload);\n      // const packageList = response.getQueryResult().getPackageList();\n      //\n      // for (let i = 0; i < packageList.length; i++) {\n      //   console.log(packageList[i]);\n      // }\n      // this.$router.push(\"/\");\n    }\n  }\n};","map":{"version":3,"names":["hostname","port","Socket","UUserRequest","UQuery","data","packageId","userId","methods","queryOrder","console","log","query","request","queryCommand","socket","connect","onopen","send","onerror","error"],"sources":["/Users/bhc/erss-hwk5-sq44-hb147/ups_frontend/src/components/QueryOrder.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Query Order</h1>\n    <form @submit.prevent=\"queryOrder\">\n      <label for=\"packageId\">Package ID:</label>\n      <input v-model=\"packageId\" type=\"text\" id=\"packageId\" name=\"packageId\" />\n      <br />\n      <label for=\"userId\">User ID:</label>\n      <input v-model=\"userId\" type=\"text\" id=\"userId\" name=\"userId\" />\n      <br />\n      <button type=\"submit\">Query Order</button>\n    </form>\n  </div>\n</template>\n\n\n<script>\n// import { inject } from 'vue';\nimport {hostname, port} from \"@/socketconfig\";\nimport Socket from \"@/socket\";\nimport {\n  UUserRequest,\n  UQuery,\n  // UUserResponse,\n} from \"@/ups_user_pb\";\n\nexport default {\n  data() {\n      return {\n          packageId: '',\n          userId: '',\n      };\n  },\n  // setup() {\n  //   const socket = inject('$socket');\n  //   return { socket };\n  // },\n  methods: {\n    async queryOrder() {\n      console.log(\"query Start!\");\n      const query = new UQuery();\n      query.packageId = this.packageId;\n      query.userId = this.userId;\n\n      const request = new UUserRequest();\n      request.queryCommand =  query;\n      const socket = new Socket(`ws://${hostname}:${port}`);\n      await socket.connect();\n      socket.onopen = () => {\n          console.log(\"Socket connection successful!\");\n          // 在这里可以进行后续操作，如发送数据等\n          this.socket.send(\"queryOrder\", request);\n      }\n      socket.onerror = (error) => {\n          console.error(\"WebSocket error: \", error);\n          console.log(\"fail\"); // 打印失败信息\n      };\n\n      // const binaryPayload = await this.$socket.onMessage(\"queryOrderResponse\");\n      \n      // const response = UUserResponse.deserializeBinary(binaryPayload);\n      // const packageList = response.getQueryResult().getPackageList();\n      //\n      // for (let i = 0; i < packageList.length; i++) {\n      //   console.log(packageList[i]);\n      // }\n      // this.$router.push(\"/\");\n    },\n  },\n};\n</script>\n"],"mappings":"AAiBA;AACA,SAAQA,QAAQ,EAAEC,IAAI,QAAO,gBAAgB;AAC7C,OAAOC,MAAK,MAAO,UAAU;AAC7B,SACEC,YAAY,EACZC;AACA;AAAA,OACK,eAAe;AAEtB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE;IACZ,CAAC;EACL,CAAC;EACD;EACA;EACA;EACA;EACAC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjBC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3B,MAAMC,KAAI,GAAI,IAAIR,MAAM,EAAE;MAC1BQ,KAAK,CAACN,SAAQ,GAAI,IAAI,CAACA,SAAS;MAChCM,KAAK,CAACL,MAAK,GAAI,IAAI,CAACA,MAAM;MAE1B,MAAMM,OAAM,GAAI,IAAIV,YAAY,EAAE;MAClCU,OAAO,CAACC,YAAW,GAAKF,KAAK;MAC7B,MAAMG,MAAK,GAAI,IAAIb,MAAM,CAAE,QAAOF,QAAS,IAAGC,IAAK,EAAC,CAAC;MACrD,MAAMc,MAAM,CAACC,OAAO,EAAE;MACtBD,MAAM,CAACE,MAAK,GAAI,MAAM;QAClBP,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAC5C;QACA,IAAI,CAACI,MAAM,CAACG,IAAI,CAAC,YAAY,EAAEL,OAAO,CAAC;MAC3C;MACAE,MAAM,CAACI,OAAM,GAAKC,KAAK,IAAK;QACxBV,OAAO,CAACU,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;QACzCV,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC,EAAE;MACzB,CAAC;;MAED;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}