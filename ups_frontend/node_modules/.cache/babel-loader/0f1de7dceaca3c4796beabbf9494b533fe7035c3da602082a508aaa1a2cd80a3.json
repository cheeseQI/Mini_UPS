{"ast":null,"code":"export default {\n  data() {\n    return {\n      packageList: []\n    };\n  },\n  computed: {\n    selectedPackage() {\n      return this.packageList.find(packageInfo => packageInfo.packageId === this.selectedPackageId);\n    }\n  },\n  created() {\n    if (this.$route.query.packageList) {\n      this.packageList = JSON.parse(this.$route.query.packageList);\n    }\n  }\n  // props: {\n  //     packageList: {\n  //         type: Array,\n  //         required: true,\n  //     },\n  // },\n  // data() {\n  //     return {\n  //         packageList: [], // 在实际应用中，此数据应该从父组件传递或在此组件中请求\n  //     };\n  // },\n};","map":{"version":3,"names":["data","packageList","computed","selectedPackage","find","packageInfo","packageId","selectedPackageId","created","$route","query","JSON","parse"],"sources":["/Users/bhc/erss-hwk5-sq44-hb147/ups_frontend/src/components/PackageList.vue"],"sourcesContent":["<template>\n    <div>\n        <h1>Package List</h1>\n        <select v-model=\"selectedPackageId\">\n            <option v-for=\"(packageInfo, i) in this.packageList\" :key=\"packageInfo.packageId\" :value=\"packageInfo.packageId\">\n                {{ i + 1 }}. {{ packageInfo.description }}\n            </option>\n        </select>\n        <div v-if=\"selectedPackage\">\n            <h2>Selected Package Details</h2>\n            <p> PackageId: {{ selectedPackage.packageId }}</p>\n            <p> Description: {{ selectedPackage.description }}</p>\n            <p> Count: {{ selectedPackage.count }}</p>\n            <p> Destination: ({{ selectedPackage.destX }}, {{ selectedPackage.destY }})</p>\n            <p> User ID: {{ selectedPackage.userId }}</p>\n        </div>\n        <button @click=\"$router.push('/')\">Back to Query</button>\n    </div>\n</template>\n\n<script>\nexport default {\n    data(){\n        return{\n            packageList:[]\n        }\n    },\n    computed: {\n        selectedPackage() {\n            return this.packageList.find(\n                (packageInfo) => packageInfo.packageId === this.selectedPackageId\n            );\n        },\n    },\n    created() {\n        if (this.$route.query.packageList) {\n            this.packageList = JSON.parse(this.$route.query.packageList);\n        }\n    }\n    // props: {\n    //     packageList: {\n    //         type: Array,\n    //         required: true,\n    //     },\n    // },\n    // data() {\n    //     return {\n    //         packageList: [], // 在实际应用中，此数据应该从父组件传递或在此组件中请求\n    //     };\n    // },\n};\n</script>\n"],"mappings":"AAqBA,eAAe;EACXA,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,WAAW,EAAC;IAChB;EACJ,CAAC;EACDC,QAAQ,EAAE;IACNC,eAAeA,CAAA,EAAG;MACd,OAAO,IAAI,CAACF,WAAW,CAACG,IAAI,CACvBC,WAAW,IAAKA,WAAW,CAACC,SAAQ,KAAM,IAAI,CAACC,iBAAgB,CACnE;IACL;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACT,WAAW,EAAE;MAC/B,IAAI,CAACA,WAAU,GAAIU,IAAI,CAACC,KAAK,CAAC,IAAI,CAACH,MAAM,CAACC,KAAK,CAACT,WAAW,CAAC;IAChE;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}