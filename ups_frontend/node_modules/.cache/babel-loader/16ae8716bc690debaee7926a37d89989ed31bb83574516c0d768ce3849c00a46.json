{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      loginMessage: \"\"\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await axios.post(\"http://localhost:8080/login\", {\n          username: this.username,\n          password: this.password\n        });\n        console.log(response.data);\n        if (response.data === true) {\n          alert(\"login success\");\n          localStorage.setItem(\"loggedIn\", \"true\");\n          localStorage.setItem(\"username\", this.username);\n          this.$router.push(\"/personalCenter\");\n        } else {\n          alert(\"login failed\");\n          this.$router.push(\"/login\");\n        }\n      } catch (error) {\n        console.error(\"Error creating order:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","username","password","loginMessage","methods","login","response","post","console","log","alert","localStorage","setItem","$router","push","error"],"sources":["/Users/bhc/erss-hwk5-sq44-hb147/ups_frontend/src/components/LoginComponent.vue"],"sourcesContent":["<template>\n    <div id=\"login-container\">\n        <div class=\"login-form\">\n            <h1>Login</h1>\n            <div class=\"input-group\">\n                <input type=\"text\" v-model=\"username\" placeholder=\"Enter Username\" />\n                <span class=\"icon\">&#xe906;</span>\n            </div>\n            <div class=\"input-group\">\n                <input type=\"password\" v-model=\"password\" placeholder=\"Enter Password\" />\n                <span class=\"icon\">&#xe90b;</span>\n            </div>\n            <button @click=\"login\">Login</button>\n            <div v-if=\"loginMessage\" class=\"login-message\">{{ loginMessage }}</div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n    data() {\n        return {\n            username: \"\",\n            password: \"\",\n            loginMessage: \"\",\n        };\n    },\n    methods: {\n        async login() {\n            try {\n                const response = await axios.post(\"http://localhost:8080/login\", {\n                    username: this.username,\n                    password: this.password,\n                });\n                console.log(response.data);\n                if (response.data === true) {\n                    alert(\"login success\");\n                    localStorage.setItem(\"loggedIn\", \"true\");\n                    localStorage.setItem(\"username\", this.username);\n                    this.$router.push(\"/personalCenter\");\n                } else {\n                    alert(\"login failed\");\n                    this.$router.push(\"/login\");\n                }\n            } catch (error) {\n                console.error(\"Error creating order:\", error);\n            }\n        },\n    },\n};\n</script>\n\n\n<style scoped>\n    #login-container {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 100vh;\n        background-color: #f0f2f5;\n    }\n\n    .login-form {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        width: 350px;\n        padding: 40px;\n        background-color: #ffffff;\n        box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16);\n        border-radius: 10px;\n    }\n\n    h1 {\n        margin-bottom: 30px;\n        font-size: 28px;\n    }\n\n    .input-group {\n        position: relative;\n        margin-bottom: 25px;\n        width: 100%;\n    }\n\n    .input-group input {\n        width: 100%;\n        padding: 12px 40px 12px 12px;\n        font-size: 16px;\n        border: 1px solid #dcdcdc;\n        border-radius: 5px;\n    }\n\n    .input-group .icon {\n        position: absolute;\n        top: 50%;\n        right: 10px;\n        transform: translateY(-50%);\n        font-family: \"icomoon\" !important;\n        font-size: 20px;\n        color: #9e9e9e;\n    }\n\n    button {\n        width: 100%;\n        padding: 12px;\n        background-color: #448aff;\n        color: #ffffff;\n        font-size: 18px;\n        border: none;\n        border-radius: 5px;\n        cursor: pointer;\n        transition: background-color 0.2s ease-in-out;\n    }\n\n    button:hover {\n        background-color: #2962ff;\n    }\n\n    .login-message {\n        margin-top: 15px;\n\n        color.login-message {\n            margin-top: 15px;\n            color: #d32f2f;\n            font-size: 14px;\n        }\n    }\n</style>\n\n\n\n    <!--<template>-->\n<!--    <div>-->\n<!--        <h1>Login</h1>-->\n<!--        <input type=\"text\" v-model=\"username\" placeholder=\"Enter Username\" />-->\n<!--        <input type=\"password\" v-model=\"password\" placeholder=\"Enter Password\" />-->\n<!--        <button @click=\"login\">Login</button>-->\n<!--        <div v-if=\"loginMessage\">{{ loginMessage }}</div>-->\n<!--    </div>-->\n<!--</template>-->\n\n<!--<script>-->\n\n<!--import axios from \"axios\";-->\n\n<!--export default {-->\n<!--    data() {-->\n<!--        return {-->\n<!--            username: \"\",-->\n<!--            password: \"\",-->\n<!--            loginMessage: \"\"-->\n<!--        };-->\n<!--    },-->\n<!--    methods: {-->\n<!--        async login() {-->\n\n<!--            try {-->\n<!--                const response = await axios.post(\"http://localhost:8080/login\", {-->\n<!--                    username: this.username,-->\n<!--                    password: this.password,-->\n<!--                });-->\n<!--                console.log(response.data);-->\n<!--                if(response.data === true){-->\n<!--                    alert(\"login success\");-->\n<!--                    localStorage.setItem(\"loggedIn\",\"true\") ;-->\n<!--                    localStorage.setItem(\"username\",this.username) ;-->\n<!--                    this.$router.push(\"/personalCenter\");-->\n<!--                }-->\n<!--                else{-->\n<!--                    alert(\"login failed\");-->\n<!--                    this.$router.push(\"/\");-->\n<!--                }-->\n\n<!--            } catch (error) {-->\n<!--                console.error(\"Error creating order:\", error);-->\n<!--            }-->\n<!--        }-->\n<!--    }-->\n<!--};-->\n<!--</script>-->\n\n<!--<style>-->\n<!--#app {-->\n<!--    font-family: Arial, sans-serif;-->\n<!--    text-align: center;-->\n<!--    margin-top: 60px;-->\n<!--}-->\n<!--</style>-->\n"],"mappings":";AAmBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAClB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,KAAKA,CAAA,EAAG;MACV,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMP,KAAK,CAACQ,IAAI,CAAC,6BAA6B,EAAE;UAC7DN,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACnB,CAAC,CAAC;QACFM,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACN,IAAI,CAAC;QAC1B,IAAIM,QAAQ,CAACN,IAAG,KAAM,IAAI,EAAE;UACxBU,KAAK,CAAC,eAAe,CAAC;UACtBC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC;UACxCD,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,IAAI,CAACX,QAAQ,CAAC;UAC/C,IAAI,CAACY,OAAO,CAACC,IAAI,CAAC,iBAAiB,CAAC;QACxC,OAAO;UACHJ,KAAK,CAAC,cAAc,CAAC;UACrB,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;QAC/B;MACJ,EAAE,OAAOC,KAAK,EAAE;QACZP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}