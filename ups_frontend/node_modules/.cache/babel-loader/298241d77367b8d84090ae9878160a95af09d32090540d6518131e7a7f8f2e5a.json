{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import {\n//     UUserRequest,\n//     UQuery,\n//     // UUserResponse,\n// } from \"@/ups_user_pb\";\n\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      packageId: '',\n      userId: ''\n    };\n  },\n  methods: {\n    async queryOrder() {\n      console.log(\"query\");\n      // const query = new UQuery();\n      // query.setPackageId(this.packageId);\n      // query.setUserId(this.userId);\n\n      try {\n        console.log(\"http get start\");\n        const response = await axios.get(`http://localhost:8080/query/1/${this.packageId}`);\n        console.log(response);\n        console.log(\"http get finished\");\n        // this.package = response.data;\n      } catch (error) {\n        console.error(error);\n        alert(\"查询订单失败，请检查订单号或稍后再试。\");\n      }\n      // const request = new UUserRequest();\n      // request.setQuerycommand(query);\n      //\n      // const response = UUserResponse.deserializeBinary(binaryPayload);\n      // const packageList = response.getQueryResult().getPackageList();\n      //\n      // for (let i = 0; i < packageList.length; i++) {\n      //   console.log(packageList[i]);\n      // }\n      this.$router.push(\"/\");\n    }\n  }\n};\n\n// import { inject } from 'vue';\n\n// export default {\n//   data() {\n//     return {\n//       orderId: \"\",\n//       order: null,\n//       socket: inject('$socket')\n//     };\n//   },\n//   // setup() {\n//   //   const socket = inject('$socket');\n//   //   return { socket };\n//   // },\n//   methods: {\n//     async queryOrder() {\n//       const query = new UQuery();\n//       query.setPackageId(this.packageId);\n//       query.setUserId(this.userId);\n//\n//       const request = new UUserRequest();\n//       request.setQuerycommand(query);\n//\n//       this.socket.send(\"queryOrder\", request);\n//\n//       // // const binaryPayload = await this.socket.onMessage(\"queryOrderResponse\");\n//       // //\n//       // // const response = UUserResponse.deserializeBinary(binaryPayload);\n//       // // const packageList = response.getQueryResult().getPackageList();\n//       // //\n//       // // for (let i = 0; i < packageList.length; i++) {\n//       // //   console.log(packageList[i]);\n//       // // }\n//       // this.$router.push(\"/\");\n//     },\n//   },\n// };","map":{"version":3,"names":["axios","data","packageId","userId","methods","queryOrder","console","log","response","get","error","alert","$router","push"],"sources":["/Users/bhc/erss-hwk5-sq44-hb147/ups_frontend/src/components/QueryOrder.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Query Order</h1>\n    <form @submit.prevent=\"queryOrder\">\n      <label for=\"packageId\">Package ID:</label>\n      <input v-model=\"packageId\" type=\"text\" id=\"packageId\" name=\"packageId\" />\n      <br />\n      <label for=\"userId\">User ID:</label>\n      <input v-model=\"userId\" type=\"text\" id=\"userId\" name=\"userId\" />\n      <br />\n      <button type=\"submit\">Query Order</button>\n    </form>\n  </div>\n</template>\n\n\n<script>\n// import {\n//     UUserRequest,\n//     UQuery,\n//     // UUserResponse,\n// } from \"@/ups_user_pb\";\n\nimport axios from \"axios\";\nexport default {\n    data() {\n        return {\n            packageId: '',\n            userId: '',\n        };\n    },\n    methods: {\n        async queryOrder() {\n            console.log(\"query\");\n            // const query = new UQuery();\n            // query.setPackageId(this.packageId);\n            // query.setUserId(this.userId);\n\n            try {\n                console.log(\"http get start\");\n                const response = await axios.get(\n                    `http://localhost:8080/query/1/${this.packageId}`\n                );\n                console.log(response);\n\n                console.log(\"http get finished\");\n                // this.package = response.data;\n            } catch (error) {\n                console.error(error);\n                alert(\"查询订单失败，请检查订单号或稍后再试。\");\n            }\n            // const request = new UUserRequest();\n            // request.setQuerycommand(query);\n            //\n            // const response = UUserResponse.deserializeBinary(binaryPayload);\n            // const packageList = response.getQueryResult().getPackageList();\n            //\n            // for (let i = 0; i < packageList.length; i++) {\n            //   console.log(packageList[i]);\n            // }\n            this.$router.push(\"/\");\n        },\n    },\n};\n\n// import { inject } from 'vue';\n\n// export default {\n//   data() {\n//     return {\n//       orderId: \"\",\n//       order: null,\n//       socket: inject('$socket')\n//     };\n//   },\n//   // setup() {\n//   //   const socket = inject('$socket');\n//   //   return { socket };\n//   // },\n//   methods: {\n//     async queryOrder() {\n//       const query = new UQuery();\n//       query.setPackageId(this.packageId);\n//       query.setUserId(this.userId);\n//\n//       const request = new UUserRequest();\n//       request.setQuerycommand(query);\n//\n//       this.socket.send(\"queryOrder\", request);\n//\n//       // // const binaryPayload = await this.socket.onMessage(\"queryOrderResponse\");\n//       // //\n//       // // const response = UUserResponse.deserializeBinary(binaryPayload);\n//       // // const packageList = response.getQueryResult().getPackageList();\n//       // //\n//       // // for (let i = 0; i < packageList.length; i++) {\n//       // //   console.log(packageList[i]);\n//       // // }\n//       // this.$router.push(\"/\");\n//     },\n//   },\n// };\n</script>\n"],"mappings":";AAiBA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE;IACZ,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,UAAUA,CAAA,EAAG;MACfC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpB;MACA;MACA;;MAEA,IAAI;QACAD,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;QAC7B,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,GAAG,CAC3B,iCAAgC,IAAI,CAACP,SAAU,GACnD;QACDI,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;QAErBF,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAChC;MACJ,EAAE,OAAOG,KAAK,EAAE;QACZJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;QACpBC,KAAK,CAAC,qBAAqB,CAAC;MAChC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;IAC1B;EACJ;AACJ,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}