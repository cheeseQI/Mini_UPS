{"ast":null,"code":"import { createElementVNode as _createElementVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Personal Center\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Check My Orders\", -1 /* HOISTED */);\nconst _hoisted_4 = [_hoisted_2, _hoisted_3];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _cache[0] || (_cache[0] = _withModifiers((...args) => $options.checkMyOrders && $options.checkMyOrders(...args), [\"prevent\"]))\n  }, _hoisted_4, 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"names":["_createElementVNode","type","_hoisted_2","_hoisted_3","_createElementBlock","_hoisted_1","onSubmit","_cache","_withModifiers","args","$options","checkMyOrders"],"sources":["/Users/bhc/erss-hwk5-sq44-hb147/ups_frontend/src/components/PersonalCenter.vue"],"sourcesContent":["\n<template>\n  <div>\n    <h1>Personal Center</h1>\n    <form @submit.prevent=\"checkMyOrders\">\n        <br />\n        <button type=\"submit\">Check My Orders</button>\n    </form>\n  </div>\n</template>\n<script>\n\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n        username: \"\",\n    };\n  },\n  methods: {\n\n      async checkMyOrders() {\n\n          try {\n              const response = await axios.get(\n                  `http://localhost:8080/query/2/${this.$store.state.username}`\n              );\n              const packageList = response.data.PackageInfoList;\n              this.$router.push({\n                  path:\"/package-list\",\n                  query:{\n                      packageList: JSON.stringify(packageList)\n                  }\n              });\n          } catch (error) {\n              console.error(error);\n              alert(\"查询订单失败，请检查用户 ID 或稍后再试。\");\n          }\n      },\n    },\n};\n</script>\n"],"mappings":";gCAGIA,mBAAA,CAAwB,YAApB,iBAAe;gCAEfA,mBAAA,CAAM;gCACNA,mBAAA,CAA8C;EAAtCC,IAAI,EAAC;AAAQ,GAAC,iBAAe;oBADrCC,UAAM,EACNC,UAA8C,C;;uBAJpDC,mBAAA,CAMM,cALJC,UAAwB,EACxBL,mBAAA,CAGO;IAHAM,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}