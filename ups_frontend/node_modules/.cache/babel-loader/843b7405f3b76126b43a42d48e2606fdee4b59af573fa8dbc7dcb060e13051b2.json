{"ast":null,"code":"import { inject } from 'vue';\nimport { UUserRequest, UQuery, UUserResponse } from \"@/ups_user_pb\";\nexport default {\n  data() {\n    return {\n      orderId: \"\",\n      order: null,\n      socket: inject('$socket')\n    };\n  },\n  // setup() {\n  //   const socket = inject('$socket');\n  //   return { socket };\n  // },\n  methods: {\n    async queryOrder() {\n      const query = new UQuery();\n      query.setPackageId(this.packageId);\n      query.setUserId(this.userId);\n      const request = new UUserRequest();\n      request.setQuerycommand(query);\n      this.socket.send(\"queryOrder\", request);\n\n      // // const binaryPayload = await this.socket.onMessage(\"queryOrderResponse\");\n      // //\n      // // const response = UUserResponse.deserializeBinary(binaryPayload);\n      // // const packageList = response.getQueryResult().getPackageList();\n      // //\n      // // for (let i = 0; i < packageList.length; i++) {\n      // //   console.log(packageList[i]);\n      // // }\n      // this.$router.push(\"/\");\n    }\n  }\n};","map":{"version":3,"names":["inject","UUserRequest","UQuery","UUserResponse","data","orderId","order","socket","methods","queryOrder","query","setPackageId","packageId","setUserId","userId","request","setQuerycommand","send"],"sources":["/Users/bhc/erss-hwk5-sq44-hb147/ups_frontend/src/components/QueryOrder.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Query Order</h1>\n    <form @submit.prevent=\"queryOrder\">\n      <label for=\"packageId\">Package ID:</label>\n      <input v-model=\"packageId\" type=\"text\" id=\"packageId\" name=\"packageId\" />\n      <br />\n      <label for=\"userId\">User ID:</label>\n      <input v-model=\"userId\" type=\"text\" id=\"userId\" name=\"userId\" />\n      <br />\n      <button type=\"submit\">Query Order</button>\n    </form>\n  </div>\n</template>\n\n\n<script>\nimport { inject } from 'vue';\n\n  import {\n    UUserRequest,\n    UQuery,\n    UUserResponse,\n  } from \"@/ups_user_pb\";\n\nexport default {\n  data() {\n    return {\n      orderId: \"\",\n      order: null,\n      socket: inject('$socket')\n    };\n  },\n  // setup() {\n  //   const socket = inject('$socket');\n  //   return { socket };\n  // },\n  methods: {\n    async queryOrder() {\n      const query = new UQuery();\n      query.setPackageId(this.packageId);\n      query.setUserId(this.userId);\n\n      const request = new UUserRequest();\n      request.setQuerycommand(query);\n\n      this.socket.send(\"queryOrder\", request);\n\n      // // const binaryPayload = await this.socket.onMessage(\"queryOrderResponse\");\n      // //\n      // // const response = UUserResponse.deserializeBinary(binaryPayload);\n      // // const packageList = response.getQueryResult().getPackageList();\n      // //\n      // // for (let i = 0; i < packageList.length; i++) {\n      // //   console.log(packageList[i]);\n      // // }\n      // this.$router.push(\"/\");\n    },\n  },\n};\n</script>\n"],"mappings":"AAiBA,SAASA,MAAK,QAAS,KAAK;AAE1B,SACEC,YAAY,EACZC,MAAM,EACNC,aAAa,QACR,eAAe;AAExB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,IAAI;MACXC,MAAM,EAAEP,MAAM,CAAC,SAAS;IAC1B,CAAC;EACH,CAAC;EACD;EACA;EACA;EACA;EACAQ,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,MAAMC,KAAI,GAAI,IAAIR,MAAM,EAAE;MAC1BQ,KAAK,CAACC,YAAY,CAAC,IAAI,CAACC,SAAS,CAAC;MAClCF,KAAK,CAACG,SAAS,CAAC,IAAI,CAACC,MAAM,CAAC;MAE5B,MAAMC,OAAM,GAAI,IAAId,YAAY,EAAE;MAClCc,OAAO,CAACC,eAAe,CAACN,KAAK,CAAC;MAE9B,IAAI,CAACH,MAAM,CAACU,IAAI,CAAC,YAAY,EAAEF,OAAO,CAAC;;MAEvC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}