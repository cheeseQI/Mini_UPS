{"ast":null,"code":"// src/socket.js\n\nclass Socket {\n  constructor(url) {\n    this.url = url;\n    this.socket = null;\n  }\n  connect() {\n    return new Promise((resolve, reject) => {\n      this.socket = new WebSocket(this.url);\n      this.socket.addEventListener(\"open\", () => {\n        resolve();\n      });\n      this.socket.addEventListener(\"error\", error => {\n        reject(error);\n      });\n    });\n  }\n\n  // send(data) {\n  //   this.socket.send(JSON.stringify(data));\n  // }\n  send(action, protobufMessage) {\n    const payload = protobufMessage.serializeBinary();\n    const data = {\n      action,\n      payload: Array.from(payload)\n    };\n    this.socket.send(JSON.stringify(data));\n  }\n  onMessage(callback) {\n    this.socket.addEventListener(\"message\", event => {\n      const data = JSON.parse(event.data);\n      callback(data);\n    });\n  }\n  close() {\n    this.socket.close();\n  }\n}\nexport default Socket;","map":{"version":3,"names":["Socket","constructor","url","socket","connect","Promise","resolve","reject","WebSocket","addEventListener","error","send","action","protobufMessage","payload","serializeBinary","data","Array","from","JSON","stringify","onMessage","callback","event","parse","close"],"sources":["/Users/bhc/erss-hwk5-sq44-hb147/ups_frontend/src/socket.js"],"sourcesContent":["// src/socket.js\n\nclass Socket {\n    constructor(url) {\n      this.url = url;\n      this.socket = null;\n    }\n  \n    connect() {\n      return new Promise((resolve, reject) => {\n        this.socket = new WebSocket(this.url);\n  \n        this.socket.addEventListener(\"open\", () => {\n          resolve();\n        });\n  \n        this.socket.addEventListener(\"error\", (error) => {\n          reject(error);\n        });\n      });\n    }\n  \n    // send(data) {\n    //   this.socket.send(JSON.stringify(data));\n    // }\n    send(action, protobufMessage) {\n        const payload = protobufMessage.serializeBinary();\n        const data = { action, payload: Array.from(payload) };\n        this.socket.send(JSON.stringify(data));\n    }\n    onMessage(callback) {\n      this.socket.addEventListener(\"message\", (event) => {\n        const data = JSON.parse(event.data);\n        callback(data);\n      });\n    }\n  \n    close() {\n      this.socket.close();\n    }\n  }\n  \n  export default Socket;\n  "],"mappings":"AAAA;;AAEA,MAAMA,MAAM,CAAC;EACTC,WAAWA,CAACC,GAAG,EAAE;IACf,IAAI,CAACA,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,MAAM,GAAG,IAAI;EACpB;EAEAC,OAAOA,CAAA,EAAG;IACR,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,IAAI,CAACJ,MAAM,GAAG,IAAIK,SAAS,CAAC,IAAI,CAACN,GAAG,CAAC;MAErC,IAAI,CAACC,MAAM,CAACM,gBAAgB,CAAC,MAAM,EAAE,MAAM;QACzCH,OAAO,EAAE;MACX,CAAC,CAAC;MAEF,IAAI,CAACH,MAAM,CAACM,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAK;QAC/CH,MAAM,CAACG,KAAK,CAAC;MACf,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;;EAEA;EACA;EACA;EACAC,IAAIA,CAACC,MAAM,EAAEC,eAAe,EAAE;IAC1B,MAAMC,OAAO,GAAGD,eAAe,CAACE,eAAe,EAAE;IACjD,MAAMC,IAAI,GAAG;MAAEJ,MAAM;MAAEE,OAAO,EAAEG,KAAK,CAACC,IAAI,CAACJ,OAAO;IAAE,CAAC;IACrD,IAAI,CAACX,MAAM,CAACQ,IAAI,CAACQ,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;EAC1C;EACAK,SAASA,CAACC,QAAQ,EAAE;IAClB,IAAI,CAACnB,MAAM,CAACM,gBAAgB,CAAC,SAAS,EAAGc,KAAK,IAAK;MACjD,MAAMP,IAAI,GAAGG,IAAI,CAACK,KAAK,CAACD,KAAK,CAACP,IAAI,CAAC;MACnCM,QAAQ,CAACN,IAAI,CAAC;IAChB,CAAC,CAAC;EACJ;EAEAS,KAAKA,CAAA,EAAG;IACN,IAAI,CAACtB,MAAM,CAACsB,KAAK,EAAE;EACrB;AACF;AAEA,eAAezB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}