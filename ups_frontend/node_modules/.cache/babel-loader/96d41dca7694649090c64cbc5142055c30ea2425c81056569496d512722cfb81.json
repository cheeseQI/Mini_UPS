{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-dcfd9078\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"login-container\"\n};\nconst _hoisted_2 = {\n  class: \"login-form\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Login\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"input-group\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"icon\"\n}, \"\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"input-group\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"icon\"\n}, \"\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  key: 0,\n  class: \"login-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.username = $event),\n    placeholder: \"Enter Username\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.username]]), _hoisted_5]), _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.password = $event),\n    placeholder: \"Enter Password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.password]]), _hoisted_7]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.login && $options.login(...args))\n  }, \"Login\"), _ctx.loginMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _toDisplayString(_ctx.loginMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["id","class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","type","_ctx","username","$event","placeholder","_hoisted_5","_hoisted_6","password","_hoisted_7","onClick","_cache","args","$options","login","loginMessage","_hoisted_8","_toDisplayString"],"sources":["/home/vcm/project/hw5_proj/erss-hwk5-sq44-hb147/ups_frontend/src/components/LoginComponent.vue"],"sourcesContent":["<template>\n    <div id=\"login-container\">\n        <div class=\"login-form\">\n            <h1>Login</h1>\n            <div class=\"input-group\">\n                <input type=\"text\" v-model=\"username\" placeholder=\"Enter Username\" />\n                <span class=\"icon\">&#xe906;</span>\n            </div>\n            <div class=\"input-group\">\n                <input type=\"password\" v-model=\"password\" placeholder=\"Enter Password\" />\n                <span class=\"icon\">&#xe90b;</span>\n            </div>\n            <button @click=\"login\">Login</button>\n            <div v-if=\"loginMessage\" class=\"login-message\">{{ loginMessage }}</div>\n        </div>\n    </div>\n</template>\n<script>\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\"; // Import SweetAlert2\n\nexport default {\n    // ...\n    methods: {\n        async login() {\n            try {\n                const response = await axios.post(\"http://vcm-32430.vm.duke.edu:8080/login\", {\n                    username: this.username,\n                    password: this.password,\n                });\n                console.log(response.data);\n                if (response.data === true) {\n                    // Use SweetAlert2 instead of alert\n                    Swal.fire({\n                        icon: 'success',\n                        title: 'Login success',\n                        showConfirmButton: false,\n                        timer: 1500\n                    })\n                    localStorage.setItem(\"loggedIn\", \"true\");\n                    localStorage.setItem(\"username\", this.username);\n                    this.$router.push(\"/personalCenter\");\n                } else {\n                    // Use SweetAlert2 instead of alert\n                    Swal.fire({\n                        icon: 'error',\n                        title: 'Login failed',\n                        showConfirmButton: false,\n                        timer: 1500\n                    })\n                    this.$router.push(\"/login\");\n                }\n            } catch (error) {\n                console.error(\"Error creating order:\", error);\n            }\n        },\n    },\n};\n</script>\n\n<style scoped>\n#login-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    background-color: #f0f2f5;\n}\n\n.login-form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 350px;\n    padding: 40px;\n    background-color: #ffffff;\n    box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16);\n    border-radius: 10px;\n}\n\nh1 {\n    margin-bottom: 30px;\n    font-size: 28px;\n}\n\n.input-group {\n    position: relative;\n    margin-bottom: 25px;\n    width: 100%;\n}\n\n.input-group input {\n    width: 100%;\n    max-width: 100%; /* Add this line */\n    padding: 12px 40px 12px 12px;\n    font-size: 16px;\n    border: 1px solid #dcdcdc;\n    border-radius: 5px;\n    box-sizing: border-box; /* Add this line */\n}\n\n.input-group .icon {\n    position: absolute;\n    top: 50%;\n    right: 10px;\n    transform: translateY(-50%);\n    font-family: \"icomoon\" !important;\n    font-size: 20px;\n    color: #9e9e9e;\n}\n\nbutton {\n    width: 100%;\n    padding: 12px;\n    background-color: #448aff;\n    color: #ffffff;\n    font-size: 18px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.2s ease-in-out;\n}\n\nbutton:hover {\n    background-color: #2962ff;\n}\n\n.login-message {\n    margin-top: 15px;\n    color: #d32f2f;\n    font-size: 14px;\n}\n</style>\n"],"mappings":";;;EACSA,EAAE,EAAC;AAAiB;;EAChBC,KAAK,EAAC;AAAY;gEACnBC,mBAAA,CAAc,YAAV,OAAK;;EACJD,KAAK,EAAC;AAAa;gEAEpBC,mBAAA,CAAkC;EAA5BD,KAAK,EAAC;AAAM,GAAC,GAAQ;;EAE1BA,KAAK,EAAC;AAAa;gEAEpBC,mBAAA,CAAkC;EAA5BD,KAAK,EAAC;AAAM,GAAC,GAAQ;;;EAGNA,KAAK,EAAC;;;uBAZvCE,mBAAA,CAcM,OAdNC,UAcM,GAbFF,mBAAA,CAYM,OAZNG,UAYM,GAXFC,UAAc,EACdJ,mBAAA,CAGM,OAHNK,UAGM,G,gBAFFL,mBAAA,CAAqE;IAA9DM,IAAI,EAAC,MAAM;+DAAUC,IAAA,CAAAC,QAAQ,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAAtBH,IAAA,CAAAC,QAAQ,E,GACpCG,UAAkC,C,GAEtCX,mBAAA,CAGM,OAHNY,UAGM,G,gBAFFZ,mBAAA,CAAyE;IAAlEM,IAAI,EAAC,UAAU;+DAAUC,IAAA,CAAAM,QAAQ,GAAAJ,MAAA;IAAEC,WAAW,EAAC;iDAAtBH,IAAA,CAAAM,QAAQ,E,GACxCC,UAAkC,C,GAEtCd,mBAAA,CAAqC;IAA5Be,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;KAAE,OAAK,GACjBV,IAAA,CAAAa,YAAY,I,cAAvBnB,mBAAA,CAAuE,OAAvEoB,UAAuE,EAAAC,gBAAA,CAArBf,IAAA,CAAAa,YAAY,oB"},"metadata":{},"sourceType":"module","externalDependencies":[]}