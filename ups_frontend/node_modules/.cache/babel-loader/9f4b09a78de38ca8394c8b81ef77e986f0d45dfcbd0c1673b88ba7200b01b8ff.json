{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"login\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Login\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.username = $event),\n    placeholder: \"Enter Username\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.username]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.password = $event),\n    placeholder: \"Enter Password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.password]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.login && _ctx.login(...args))\n  }, \"Login\"), _ctx.loginMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString(_ctx.loginMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["id","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","type","_ctx","username","$event","placeholder","password","onClick","_cache","args","login","loginMessage","_hoisted_3","_toDisplayString"],"sources":["/Users/bhc/erss-hwk5-sq44-hb147/ups_frontend/src/components/Login.vue"],"sourcesContent":["<template>\n    <div id=\"login\">\n        <h1>Login</h1>\n        <input type=\"text\" v-model=\"username\" placeholder=\"Enter Username\" />\n        <input type=\"password\" v-model=\"password\" placeholder=\"Enter Password\" />\n        <button @click=\"login\">Login</button>\n        <div v-if=\"loginMessage\">{{ loginMessage }}</div>\n    </div>\n</template>\n\n<script>\n\nexport default {\n    name: \"Login\",\n    data() {\n        return {\n            username: \"\",\n            password: \"\",\n            loginMessage: \"\"\n        };\n    },\n    methods: {\n        async login() {\n            // 在这里添加逻辑以处理登录操作，例如向后端发送请求进行身份验证。\n            // 以下是一个简单的示例，仅检查用户名和密码是否匹配预定义的值。\n\n            if (this.username === \"user\" && this.password === \"password\") {\n                this.loginMessage = \"Login successful!\";\n            } else {\n                this.loginMessage = \"Invalid username or password.\";\n            }\n        }\n        this.$router.push(\"/\");\n    }\n};\n</script>\n\n<style>\n#app {\n    font-family: Arial, sans-serif;\n    text-align: center;\n    margin-top: 60px;\n}\n</style>\n"],"mappings":";;EACSA,EAAE,EAAC;AAAO;gCACXC,mBAAA,CAAc,YAAV,OAAK;;;;;uBADbC,mBAAA,CAMM,OANNC,UAMM,GALFC,UAAc,E,gBACdH,mBAAA,CAAqE;IAA9DI,IAAI,EAAC,MAAM;+DAAUC,IAAA,CAAAC,QAAQ,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAAtBH,IAAA,CAAAC,QAAQ,E,mBACpCN,mBAAA,CAAyE;IAAlEI,IAAI,EAAC,UAAU;+DAAUC,IAAA,CAAAI,QAAQ,GAAAF,MAAA;IAAEC,WAAW,EAAC;iDAAtBH,IAAA,CAAAI,QAAQ,E,GACxCT,mBAAA,CAAqC;IAA5BU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,IAAA,CAAAQ,KAAA,IAAAR,IAAA,CAAAQ,KAAA,IAAAD,IAAA,CAAK;KAAE,OAAK,GACjBP,IAAA,CAAAS,YAAY,I,cAAvBb,mBAAA,CAAiD,OAAAc,UAAA,EAAAC,gBAAA,CAArBX,IAAA,CAAAS,YAAY,oB"},"metadata":{},"sourceType":"module","externalDependencies":[]}