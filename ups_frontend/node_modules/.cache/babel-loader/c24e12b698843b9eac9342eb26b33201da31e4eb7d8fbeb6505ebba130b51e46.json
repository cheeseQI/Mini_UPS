{"ast":null,"code":"import { inject } from 'vue';\n\n// import {\n//   UUserRequest,\n//   UQuery,\n//   UUserResponse,\n// } from \"@/ups_user_pb\";\n\nexport default {\n  data() {\n    return {\n      packageId: '',\n      userId: ''\n    };\n  },\n  setup() {\n    const socket = inject('$socket');\n    return {\n      socket\n    };\n  },\n  methods: {\n    async queryOrder() {\n      console.log(\"query Start!\");\n      // const query = new UQuery();\n      // query.setPackageId(this.packageId);\n      // query.setUserId(this.userId);\n      //\n      // const request = new UUserRequest();\n      // request.setQuerycommand(query);\n\n      this.socket.onopen = () => {\n        console.log(\"Socket connection successful!\");\n        // 在这里可以进行后续操作，如发送数据等\n      };\n\n      this.socket.onerror = error => {\n        console.error(\"WebSocket error: \", error);\n        console.log(\"fail\"); // 打印失败信息\n      };\n\n      this.socket.connect();\n      // this.socket.send(\"queryOrder\", request);\n\n      // const binaryPayload = await this.$socket.onMessage(\"queryOrderResponse\");\n\n      // const response = UUserResponse.deserializeBinary(binaryPayload);\n      // const packageList = response.getQueryResult().getPackageList();\n      //\n      // for (let i = 0; i < packageList.length; i++) {\n      //   console.log(packageList[i]);\n      // }\n      // this.$router.push(\"/\");\n    }\n  }\n};","map":{"version":3,"names":["inject","data","packageId","userId","setup","socket","methods","queryOrder","console","log","onopen","onerror","error","connect"],"sources":["/Users/bhc/erss-hwk5-sq44-hb147/ups_frontend/src/components/QueryOrder.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Query Order</h1>\n    <form @submit.prevent=\"queryOrder\">\n      <label for=\"packageId\">Package ID:</label>\n      <input v-model=\"packageId\" type=\"text\" id=\"packageId\" name=\"packageId\" />\n      <br />\n      <label for=\"userId\">User ID:</label>\n      <input v-model=\"userId\" type=\"text\" id=\"userId\" name=\"userId\" />\n      <br />\n      <button type=\"submit\">Query Order</button>\n    </form>\n  </div>\n</template>\n\n\n<script>\nimport { inject } from 'vue';\n\n  // import {\n  //   UUserRequest,\n  //   UQuery,\n  //   UUserResponse,\n  // } from \"@/ups_user_pb\";\n\nexport default {\n  data() {\n      return {\n          packageId: '',\n          userId: '',\n      };\n  },\n  setup() {\n    const socket = inject('$socket');\n    return { socket };\n  },\n  methods: {\n    async queryOrder() {\n      console.log(\"query Start!\");\n      // const query = new UQuery();\n      // query.setPackageId(this.packageId);\n      // query.setUserId(this.userId);\n      //\n      // const request = new UUserRequest();\n      // request.setQuerycommand(query);\n\n        this.socket.onopen = () => {\n            console.log(\"Socket connection successful!\");\n            // 在这里可以进行后续操作，如发送数据等\n        }\n        this.socket.onerror = (error) => {\n            console.error(\"WebSocket error: \", error);\n            console.log(\"fail\"); // 打印失败信息\n        };\n      this.socket.connect();\n      // this.socket.send(\"queryOrder\", request);\n\n      // const binaryPayload = await this.$socket.onMessage(\"queryOrderResponse\");\n      \n      // const response = UUserResponse.deserializeBinary(binaryPayload);\n      // const packageList = response.getQueryResult().getPackageList();\n      //\n      // for (let i = 0; i < packageList.length; i++) {\n      //   console.log(packageList[i]);\n      // }\n      // this.$router.push(\"/\");\n    },\n  },\n};\n</script>\n"],"mappings":"AAiBA,SAASA,MAAK,QAAS,KAAK;;AAE1B;AACA;AACA;AACA;AACA;;AAEF,eAAe;EACbC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE;IACZ,CAAC;EACL,CAAC;EACDC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIL,MAAM,CAAC,SAAS,CAAC;IAChC,OAAO;MAAEK;IAAO,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjBC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3B;MACA;MACA;MACA;MACA;MACA;;MAEE,IAAI,CAACJ,MAAM,CAACK,MAAK,GAAI,MAAM;QACvBF,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAC5C;MACJ;;MACA,IAAI,CAACJ,MAAM,CAACM,OAAM,GAAKC,KAAK,IAAK;QAC7BJ,OAAO,CAACI,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;QACzCJ,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC,EAAE;MACzB,CAAC;;MACH,IAAI,CAACJ,MAAM,CAACQ,OAAO,EAAE;MACrB;;MAEA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}