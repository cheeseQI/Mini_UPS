{"ast":null,"code":"/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader,\n  $Writer = $protobuf.Writer,\n  $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n$root.UPackage = function () {\n  /**\n   * Properties of a UPackage.\n   * @exports IUPackage\n   * @interface IUPackage\n   * @property {number|Long} id UPackage id\n   * @property {string} status UPackage status\n   * @property {string} description UPackage description\n   * @property {number} itemCount UPackage itemCount\n   * @property {number} x UPackage x\n   * @property {number} y UPackage y\n   */\n\n  /**\n   * Constructs a new UPackage.\n   * @exports UPackage\n   * @classdesc Represents a UPackage.\n   * @implements IUPackage\n   * @constructor\n   * @param {IUPackage=} [properties] Properties to set\n   */\n  function UPackage(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n\n  /**\n   * UPackage id.\n   * @member {number|Long} id\n   * @memberof UPackage\n   * @instance\n   */\n  UPackage.prototype.id = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n  /**\n   * UPackage status.\n   * @member {string} status\n   * @memberof UPackage\n   * @instance\n   */\n  UPackage.prototype.status = \"\";\n\n  /**\n   * UPackage description.\n   * @member {string} description\n   * @memberof UPackage\n   * @instance\n   */\n  UPackage.prototype.description = \"\";\n\n  /**\n   * UPackage itemCount.\n   * @member {number} itemCount\n   * @memberof UPackage\n   * @instance\n   */\n  UPackage.prototype.itemCount = 0;\n\n  /**\n   * UPackage x.\n   * @member {number} x\n   * @memberof UPackage\n   * @instance\n   */\n  UPackage.prototype.x = 0;\n\n  /**\n   * UPackage y.\n   * @member {number} y\n   * @memberof UPackage\n   * @instance\n   */\n  UPackage.prototype.y = 0;\n\n  /**\n   * Creates a new UPackage instance using the specified properties.\n   * @function create\n   * @memberof UPackage\n   * @static\n   * @param {IUPackage=} [properties] Properties to set\n   * @returns {UPackage} UPackage instance\n   */\n  UPackage.create = function create(properties) {\n    return new UPackage(properties);\n  };\n\n  /**\n   * Encodes the specified UPackage message. Does not implicitly {@link UPackage.verify|verify} messages.\n   * @function encode\n   * @memberof UPackage\n   * @static\n   * @param {IUPackage} message UPackage message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  UPackage.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    writer.uint32( /* id 1, wireType 0 =*/8).int64(message.id);\n    writer.uint32( /* id 2, wireType 2 =*/18).string(message.status);\n    writer.uint32( /* id 3, wireType 2 =*/26).string(message.description);\n    writer.uint32( /* id 4, wireType 0 =*/32).int32(message.itemCount);\n    writer.uint32( /* id 5, wireType 0 =*/40).int32(message.x);\n    writer.uint32( /* id 6, wireType 0 =*/48).int32(message.y);\n    return writer;\n  };\n\n  /**\n   * Encodes the specified UPackage message, length delimited. Does not implicitly {@link UPackage.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof UPackage\n   * @static\n   * @param {IUPackage} message UPackage message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  UPackage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n\n  /**\n   * Decodes a UPackage message from the specified reader or buffer.\n   * @function decode\n   * @memberof UPackage\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {UPackage} UPackage\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  UPackage.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.UPackage();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          {\n            message.id = reader.int64();\n            break;\n          }\n        case 2:\n          {\n            message.status = reader.string();\n            break;\n          }\n        case 3:\n          {\n            message.description = reader.string();\n            break;\n          }\n        case 4:\n          {\n            message.itemCount = reader.int32();\n            break;\n          }\n        case 5:\n          {\n            message.x = reader.int32();\n            break;\n          }\n        case 6:\n          {\n            message.y = reader.int32();\n            break;\n          }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    if (!message.hasOwnProperty(\"id\")) throw $util.ProtocolError(\"missing required 'id'\", {\n      instance: message\n    });\n    if (!message.hasOwnProperty(\"status\")) throw $util.ProtocolError(\"missing required 'status'\", {\n      instance: message\n    });\n    if (!message.hasOwnProperty(\"description\")) throw $util.ProtocolError(\"missing required 'description'\", {\n      instance: message\n    });\n    if (!message.hasOwnProperty(\"itemCount\")) throw $util.ProtocolError(\"missing required 'itemCount'\", {\n      instance: message\n    });\n    if (!message.hasOwnProperty(\"x\")) throw $util.ProtocolError(\"missing required 'x'\", {\n      instance: message\n    });\n    if (!message.hasOwnProperty(\"y\")) throw $util.ProtocolError(\"missing required 'y'\", {\n      instance: message\n    });\n    return message;\n  };\n\n  /**\n   * Decodes a UPackage message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof UPackage\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {UPackage} UPackage\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  UPackage.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n\n  /**\n   * Verifies a UPackage message.\n   * @function verify\n   * @memberof UPackage\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  UPackage.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high))) return \"id: integer|Long expected\";\n    if (!$util.isString(message.status)) return \"status: string expected\";\n    if (!$util.isString(message.description)) return \"description: string expected\";\n    if (!$util.isInteger(message.itemCount)) return \"itemCount: integer expected\";\n    if (!$util.isInteger(message.x)) return \"x: integer expected\";\n    if (!$util.isInteger(message.y)) return \"y: integer expected\";\n    return null;\n  };\n\n  /**\n   * Creates a UPackage message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof UPackage\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {UPackage} UPackage\n   */\n  UPackage.fromObject = function fromObject(object) {\n    if (object instanceof $root.UPackage) return object;\n    var message = new $root.UPackage();\n    if (object.id != null) if ($util.Long) (message.id = $util.Long.fromValue(object.id)).unsigned = false;else if (typeof object.id === \"string\") message.id = parseInt(object.id, 10);else if (typeof object.id === \"number\") message.id = object.id;else if (typeof object.id === \"object\") message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber();\n    if (object.status != null) message.status = String(object.status);\n    if (object.description != null) message.description = String(object.description);\n    if (object.itemCount != null) message.itemCount = object.itemCount | 0;\n    if (object.x != null) message.x = object.x | 0;\n    if (object.y != null) message.y = object.y | 0;\n    return message;\n  };\n\n  /**\n   * Creates a plain object from a UPackage message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof UPackage\n   * @static\n   * @param {UPackage} message UPackage\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  UPackage.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.defaults) {\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, false);\n        object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.id = options.longs === String ? \"0\" : 0;\n      object.status = \"\";\n      object.description = \"\";\n      object.itemCount = 0;\n      object.x = 0;\n      object.y = 0;\n    }\n    if (message.id != null && message.hasOwnProperty(\"id\")) if (typeof message.id === \"number\") object.id = options.longs === String ? String(message.id) : message.id;else object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber() : message.id;\n    if (message.status != null && message.hasOwnProperty(\"status\")) object.status = message.status;\n    if (message.description != null && message.hasOwnProperty(\"description\")) object.description = message.description;\n    if (message.itemCount != null && message.hasOwnProperty(\"itemCount\")) object.itemCount = message.itemCount;\n    if (message.x != null && message.hasOwnProperty(\"x\")) object.x = message.x;\n    if (message.y != null && message.hasOwnProperty(\"y\")) object.y = message.y;\n    return object;\n  };\n\n  /**\n   * Converts this UPackage to JSON.\n   * @function toJSON\n   * @memberof UPackage\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  UPackage.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  /**\n   * Gets the default type url for UPackage\n   * @function getTypeUrl\n   * @memberof UPackage\n   * @static\n   * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n   * @returns {string} The default type url\n   */\n  UPackage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n    if (typeUrlPrefix === undefined) {\n      typeUrlPrefix = \"type.googleapis.com\";\n    }\n    return typeUrlPrefix + \"/UPackage\";\n  };\n  return UPackage;\n}();\n$root.UQuery = function () {\n  /**\n   * Properties of a UQuery.\n   * @exports IUQuery\n   * @interface IUQuery\n   * @property {number|Long|null} [packageId] UQuery packageId\n   * @property {number|null} [userId] UQuery userId\n   */\n\n  /**\n   * Constructs a new UQuery.\n   * @exports UQuery\n   * @classdesc Represents a UQuery.\n   * @implements IUQuery\n   * @constructor\n   * @param {IUQuery=} [properties] Properties to set\n   */\n  function UQuery(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n\n  /**\n   * UQuery packageId.\n   * @member {number|Long} packageId\n   * @memberof UQuery\n   * @instance\n   */\n  UQuery.prototype.packageId = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n  /**\n   * UQuery userId.\n   * @member {number} userId\n   * @memberof UQuery\n   * @instance\n   */\n  UQuery.prototype.userId = 0;\n\n  /**\n   * Creates a new UQuery instance using the specified properties.\n   * @function create\n   * @memberof UQuery\n   * @static\n   * @param {IUQuery=} [properties] Properties to set\n   * @returns {UQuery} UQuery instance\n   */\n  UQuery.create = function create(properties) {\n    return new UQuery(properties);\n  };\n\n  /**\n   * Encodes the specified UQuery message. Does not implicitly {@link UQuery.verify|verify} messages.\n   * @function encode\n   * @memberof UQuery\n   * @static\n   * @param {IUQuery} message UQuery message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  UQuery.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.packageId != null && Object.hasOwnProperty.call(message, \"packageId\")) writer.uint32( /* id 1, wireType 0 =*/8).int64(message.packageId);\n    if (message.userId != null && Object.hasOwnProperty.call(message, \"userId\")) writer.uint32( /* id 2, wireType 0 =*/16).int32(message.userId);\n    return writer;\n  };\n\n  /**\n   * Encodes the specified UQuery message, length delimited. Does not implicitly {@link UQuery.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof UQuery\n   * @static\n   * @param {IUQuery} message UQuery message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  UQuery.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n\n  /**\n   * Decodes a UQuery message from the specified reader or buffer.\n   * @function decode\n   * @memberof UQuery\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {UQuery} UQuery\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  UQuery.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.UQuery();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          {\n            message.packageId = reader.int64();\n            break;\n          }\n        case 2:\n          {\n            message.userId = reader.int32();\n            break;\n          }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  };\n\n  /**\n   * Decodes a UQuery message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof UQuery\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {UQuery} UQuery\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  UQuery.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n\n  /**\n   * Verifies a UQuery message.\n   * @function verify\n   * @memberof UQuery\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  UQuery.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.packageId != null && message.hasOwnProperty(\"packageId\")) if (!$util.isInteger(message.packageId) && !(message.packageId && $util.isInteger(message.packageId.low) && $util.isInteger(message.packageId.high))) return \"packageId: integer|Long expected\";\n    if (message.userId != null && message.hasOwnProperty(\"userId\")) if (!$util.isInteger(message.userId)) return \"userId: integer expected\";\n    return null;\n  };\n\n  /**\n   * Creates a UQuery message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof UQuery\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {UQuery} UQuery\n   */\n  UQuery.fromObject = function fromObject(object) {\n    if (object instanceof $root.UQuery) return object;\n    var message = new $root.UQuery();\n    if (object.packageId != null) if ($util.Long) (message.packageId = $util.Long.fromValue(object.packageId)).unsigned = false;else if (typeof object.packageId === \"string\") message.packageId = parseInt(object.packageId, 10);else if (typeof object.packageId === \"number\") message.packageId = object.packageId;else if (typeof object.packageId === \"object\") message.packageId = new $util.LongBits(object.packageId.low >>> 0, object.packageId.high >>> 0).toNumber();\n    if (object.userId != null) message.userId = object.userId | 0;\n    return message;\n  };\n\n  /**\n   * Creates a plain object from a UQuery message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof UQuery\n   * @static\n   * @param {UQuery} message UQuery\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  UQuery.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.defaults) {\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, false);\n        object.packageId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.packageId = options.longs === String ? \"0\" : 0;\n      object.userId = 0;\n    }\n    if (message.packageId != null && message.hasOwnProperty(\"packageId\")) if (typeof message.packageId === \"number\") object.packageId = options.longs === String ? String(message.packageId) : message.packageId;else object.packageId = options.longs === String ? $util.Long.prototype.toString.call(message.packageId) : options.longs === Number ? new $util.LongBits(message.packageId.low >>> 0, message.packageId.high >>> 0).toNumber() : message.packageId;\n    if (message.userId != null && message.hasOwnProperty(\"userId\")) object.userId = message.userId;\n    return object;\n  };\n\n  /**\n   * Converts this UQuery to JSON.\n   * @function toJSON\n   * @memberof UQuery\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  UQuery.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  /**\n   * Gets the default type url for UQuery\n   * @function getTypeUrl\n   * @memberof UQuery\n   * @static\n   * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n   * @returns {string} The default type url\n   */\n  UQuery.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n    if (typeUrlPrefix === undefined) {\n      typeUrlPrefix = \"type.googleapis.com\";\n    }\n    return typeUrlPrefix + \"/UQuery\";\n  };\n  return UQuery;\n}();\n$root.UQueryResult = function () {\n  /**\n   * Properties of a UQueryResult.\n   * @exports IUQueryResult\n   * @interface IUQueryResult\n   * @property {Array.<IUPackage>|null} [\"package\"] UQueryResult package\n   * @property {number} ack UQueryResult ack\n   */\n\n  /**\n   * Constructs a new UQueryResult.\n   * @exports UQueryResult\n   * @classdesc Represents a UQueryResult.\n   * @implements IUQueryResult\n   * @constructor\n   * @param {IUQueryResult=} [properties] Properties to set\n   */\n  function UQueryResult(properties) {\n    this[\"package\"] = [];\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n\n  /**\n   * UQueryResult package.\n   * @member {Array.<IUPackage>} package\n   * @memberof UQueryResult\n   * @instance\n   */\n  UQueryResult.prototype[\"package\"] = $util.emptyArray;\n\n  /**\n   * UQueryResult ack.\n   * @member {number} ack\n   * @memberof UQueryResult\n   * @instance\n   */\n  UQueryResult.prototype.ack = 0;\n\n  /**\n   * Creates a new UQueryResult instance using the specified properties.\n   * @function create\n   * @memberof UQueryResult\n   * @static\n   * @param {IUQueryResult=} [properties] Properties to set\n   * @returns {UQueryResult} UQueryResult instance\n   */\n  UQueryResult.create = function create(properties) {\n    return new UQueryResult(properties);\n  };\n\n  /**\n   * Encodes the specified UQueryResult message. Does not implicitly {@link UQueryResult.verify|verify} messages.\n   * @function encode\n   * @memberof UQueryResult\n   * @static\n   * @param {IUQueryResult} message UQueryResult message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  UQueryResult.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message[\"package\"] != null && message[\"package\"].length) for (var i = 0; i < message[\"package\"].length; ++i) $root.UPackage.encode(message[\"package\"][i], writer.uint32( /* id 1, wireType 2 =*/10).fork()).ldelim();\n    writer.uint32( /* id 2, wireType 0 =*/16).int32(message.ack);\n    return writer;\n  };\n\n  /**\n   * Encodes the specified UQueryResult message, length delimited. Does not implicitly {@link UQueryResult.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof UQueryResult\n   * @static\n   * @param {IUQueryResult} message UQueryResult message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  UQueryResult.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n\n  /**\n   * Decodes a UQueryResult message from the specified reader or buffer.\n   * @function decode\n   * @memberof UQueryResult\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {UQueryResult} UQueryResult\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  UQueryResult.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.UQueryResult();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          {\n            if (!(message[\"package\"] && message[\"package\"].length)) message[\"package\"] = [];\n            message[\"package\"].push($root.UPackage.decode(reader, reader.uint32()));\n            break;\n          }\n        case 2:\n          {\n            message.ack = reader.int32();\n            break;\n          }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    if (!message.hasOwnProperty(\"ack\")) throw $util.ProtocolError(\"missing required 'ack'\", {\n      instance: message\n    });\n    return message;\n  };\n\n  /**\n   * Decodes a UQueryResult message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof UQueryResult\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {UQueryResult} UQueryResult\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  UQueryResult.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n\n  /**\n   * Verifies a UQueryResult message.\n   * @function verify\n   * @memberof UQueryResult\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  UQueryResult.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message[\"package\"] != null && message.hasOwnProperty(\"package\")) {\n      if (!Array.isArray(message[\"package\"])) return \"package: array expected\";\n      for (var i = 0; i < message[\"package\"].length; ++i) {\n        var error = $root.UPackage.verify(message[\"package\"][i]);\n        if (error) return \"package.\" + error;\n      }\n    }\n    if (!$util.isInteger(message.ack)) return \"ack: integer expected\";\n    return null;\n  };\n\n  /**\n   * Creates a UQueryResult message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof UQueryResult\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {UQueryResult} UQueryResult\n   */\n  UQueryResult.fromObject = function fromObject(object) {\n    if (object instanceof $root.UQueryResult) return object;\n    var message = new $root.UQueryResult();\n    if (object[\"package\"]) {\n      if (!Array.isArray(object[\"package\"])) throw TypeError(\".UQueryResult.package: array expected\");\n      message[\"package\"] = [];\n      for (var i = 0; i < object[\"package\"].length; ++i) {\n        if (typeof object[\"package\"][i] !== \"object\") throw TypeError(\".UQueryResult.package: object expected\");\n        message[\"package\"][i] = $root.UPackage.fromObject(object[\"package\"][i]);\n      }\n    }\n    if (object.ack != null) message.ack = object.ack | 0;\n    return message;\n  };\n\n  /**\n   * Creates a plain object from a UQueryResult message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof UQueryResult\n   * @static\n   * @param {UQueryResult} message UQueryResult\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  UQueryResult.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.arrays || options.defaults) object[\"package\"] = [];\n    if (options.defaults) object.ack = 0;\n    if (message[\"package\"] && message[\"package\"].length) {\n      object[\"package\"] = [];\n      for (var j = 0; j < message[\"package\"].length; ++j) object[\"package\"][j] = $root.UPackage.toObject(message[\"package\"][j], options);\n    }\n    if (message.ack != null && message.hasOwnProperty(\"ack\")) object.ack = message.ack;\n    return object;\n  };\n\n  /**\n   * Converts this UQueryResult to JSON.\n   * @function toJSON\n   * @memberof UQueryResult\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  UQueryResult.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  /**\n   * Gets the default type url for UQueryResult\n   * @function getTypeUrl\n   * @memberof UQueryResult\n   * @static\n   * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n   * @returns {string} The default type url\n   */\n  UQueryResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n    if (typeUrlPrefix === undefined) {\n      typeUrlPrefix = \"type.googleapis.com\";\n    }\n    return typeUrlPrefix + \"/UQueryResult\";\n  };\n  return UQueryResult;\n}();\n$root.URedirect = function () {\n  /**\n   * Properties of a URedirect.\n   * @exports IURedirect\n   * @interface IURedirect\n   * @property {number|Long} packageId URedirect packageId\n   * @property {number} x URedirect x\n   * @property {number} y URedirect y\n   */\n\n  /**\n   * Constructs a new URedirect.\n   * @exports URedirect\n   * @classdesc Represents a URedirect.\n   * @implements IURedirect\n   * @constructor\n   * @param {IURedirect=} [properties] Properties to set\n   */\n  function URedirect(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n\n  /**\n   * URedirect packageId.\n   * @member {number|Long} packageId\n   * @memberof URedirect\n   * @instance\n   */\n  URedirect.prototype.packageId = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n\n  /**\n   * URedirect x.\n   * @member {number} x\n   * @memberof URedirect\n   * @instance\n   */\n  URedirect.prototype.x = 0;\n\n  /**\n   * URedirect y.\n   * @member {number} y\n   * @memberof URedirect\n   * @instance\n   */\n  URedirect.prototype.y = 0;\n\n  /**\n   * Creates a new URedirect instance using the specified properties.\n   * @function create\n   * @memberof URedirect\n   * @static\n   * @param {IURedirect=} [properties] Properties to set\n   * @returns {URedirect} URedirect instance\n   */\n  URedirect.create = function create(properties) {\n    return new URedirect(properties);\n  };\n\n  /**\n   * Encodes the specified URedirect message. Does not implicitly {@link URedirect.verify|verify} messages.\n   * @function encode\n   * @memberof URedirect\n   * @static\n   * @param {IURedirect} message URedirect message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  URedirect.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    writer.uint32( /* id 1, wireType 0 =*/8).int64(message.packageId);\n    writer.uint32( /* id 2, wireType 0 =*/16).int32(message.x);\n    writer.uint32( /* id 3, wireType 0 =*/24).int32(message.y);\n    return writer;\n  };\n\n  /**\n   * Encodes the specified URedirect message, length delimited. Does not implicitly {@link URedirect.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof URedirect\n   * @static\n   * @param {IURedirect} message URedirect message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  URedirect.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n\n  /**\n   * Decodes a URedirect message from the specified reader or buffer.\n   * @function decode\n   * @memberof URedirect\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {URedirect} URedirect\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  URedirect.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.URedirect();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          {\n            message.packageId = reader.int64();\n            break;\n          }\n        case 2:\n          {\n            message.x = reader.int32();\n            break;\n          }\n        case 3:\n          {\n            message.y = reader.int32();\n            break;\n          }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    if (!message.hasOwnProperty(\"packageId\")) throw $util.ProtocolError(\"missing required 'packageId'\", {\n      instance: message\n    });\n    if (!message.hasOwnProperty(\"x\")) throw $util.ProtocolError(\"missing required 'x'\", {\n      instance: message\n    });\n    if (!message.hasOwnProperty(\"y\")) throw $util.ProtocolError(\"missing required 'y'\", {\n      instance: message\n    });\n    return message;\n  };\n\n  /**\n   * Decodes a URedirect message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof URedirect\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {URedirect} URedirect\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  URedirect.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n\n  /**\n   * Verifies a URedirect message.\n   * @function verify\n   * @memberof URedirect\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  URedirect.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (!$util.isInteger(message.packageId) && !(message.packageId && $util.isInteger(message.packageId.low) && $util.isInteger(message.packageId.high))) return \"packageId: integer|Long expected\";\n    if (!$util.isInteger(message.x)) return \"x: integer expected\";\n    if (!$util.isInteger(message.y)) return \"y: integer expected\";\n    return null;\n  };\n\n  /**\n   * Creates a URedirect message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof URedirect\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {URedirect} URedirect\n   */\n  URedirect.fromObject = function fromObject(object) {\n    if (object instanceof $root.URedirect) return object;\n    var message = new $root.URedirect();\n    if (object.packageId != null) if ($util.Long) (message.packageId = $util.Long.fromValue(object.packageId)).unsigned = false;else if (typeof object.packageId === \"string\") message.packageId = parseInt(object.packageId, 10);else if (typeof object.packageId === \"number\") message.packageId = object.packageId;else if (typeof object.packageId === \"object\") message.packageId = new $util.LongBits(object.packageId.low >>> 0, object.packageId.high >>> 0).toNumber();\n    if (object.x != null) message.x = object.x | 0;\n    if (object.y != null) message.y = object.y | 0;\n    return message;\n  };\n\n  /**\n   * Creates a plain object from a URedirect message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof URedirect\n   * @static\n   * @param {URedirect} message URedirect\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  URedirect.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.defaults) {\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, false);\n        object.packageId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.packageId = options.longs === String ? \"0\" : 0;\n      object.x = 0;\n      object.y = 0;\n    }\n    if (message.packageId != null && message.hasOwnProperty(\"packageId\")) if (typeof message.packageId === \"number\") object.packageId = options.longs === String ? String(message.packageId) : message.packageId;else object.packageId = options.longs === String ? $util.Long.prototype.toString.call(message.packageId) : options.longs === Number ? new $util.LongBits(message.packageId.low >>> 0, message.packageId.high >>> 0).toNumber() : message.packageId;\n    if (message.x != null && message.hasOwnProperty(\"x\")) object.x = message.x;\n    if (message.y != null && message.hasOwnProperty(\"y\")) object.y = message.y;\n    return object;\n  };\n\n  /**\n   * Converts this URedirect to JSON.\n   * @function toJSON\n   * @memberof URedirect\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  URedirect.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  /**\n   * Gets the default type url for URedirect\n   * @function getTypeUrl\n   * @memberof URedirect\n   * @static\n   * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n   * @returns {string} The default type url\n   */\n  URedirect.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n    if (typeUrlPrefix === undefined) {\n      typeUrlPrefix = \"type.googleapis.com\";\n    }\n    return typeUrlPrefix + \"/URedirect\";\n  };\n  return URedirect;\n}();\n$root.URedirectResult = function () {\n  /**\n   * Properties of a URedirectResult.\n   * @exports IURedirectResult\n   * @interface IURedirectResult\n   * @property {string} message URedirectResult message\n   */\n\n  /**\n   * Constructs a new URedirectResult.\n   * @exports URedirectResult\n   * @classdesc Represents a URedirectResult.\n   * @implements IURedirectResult\n   * @constructor\n   * @param {IURedirectResult=} [properties] Properties to set\n   */\n  function URedirectResult(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n\n  /**\n   * URedirectResult message.\n   * @member {string} message\n   * @memberof URedirectResult\n   * @instance\n   */\n  URedirectResult.prototype.message = \"\";\n\n  /**\n   * Creates a new URedirectResult instance using the specified properties.\n   * @function create\n   * @memberof URedirectResult\n   * @static\n   * @param {IURedirectResult=} [properties] Properties to set\n   * @returns {URedirectResult} URedirectResult instance\n   */\n  URedirectResult.create = function create(properties) {\n    return new URedirectResult(properties);\n  };\n\n  /**\n   * Encodes the specified URedirectResult message. Does not implicitly {@link URedirectResult.verify|verify} messages.\n   * @function encode\n   * @memberof URedirectResult\n   * @static\n   * @param {IURedirectResult} message URedirectResult message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  URedirectResult.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    writer.uint32( /* id 1, wireType 2 =*/10).string(message.message);\n    return writer;\n  };\n\n  /**\n   * Encodes the specified URedirectResult message, length delimited. Does not implicitly {@link URedirectResult.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof URedirectResult\n   * @static\n   * @param {IURedirectResult} message URedirectResult message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  URedirectResult.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n\n  /**\n   * Decodes a URedirectResult message from the specified reader or buffer.\n   * @function decode\n   * @memberof URedirectResult\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {URedirectResult} URedirectResult\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  URedirectResult.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.URedirectResult();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          {\n            message.message = reader.string();\n            break;\n          }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    if (!message.hasOwnProperty(\"message\")) throw $util.ProtocolError(\"missing required 'message'\", {\n      instance: message\n    });\n    return message;\n  };\n\n  /**\n   * Decodes a URedirectResult message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof URedirectResult\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {URedirectResult} URedirectResult\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  URedirectResult.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n\n  /**\n   * Verifies a URedirectResult message.\n   * @function verify\n   * @memberof URedirectResult\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  URedirectResult.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (!$util.isString(message.message)) return \"message: string expected\";\n    return null;\n  };\n\n  /**\n   * Creates a URedirectResult message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof URedirectResult\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {URedirectResult} URedirectResult\n   */\n  URedirectResult.fromObject = function fromObject(object) {\n    if (object instanceof $root.URedirectResult) return object;\n    var message = new $root.URedirectResult();\n    if (object.message != null) message.message = String(object.message);\n    return message;\n  };\n\n  /**\n   * Creates a plain object from a URedirectResult message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof URedirectResult\n   * @static\n   * @param {URedirectResult} message URedirectResult\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  URedirectResult.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.defaults) object.message = \"\";\n    if (message.message != null && message.hasOwnProperty(\"message\")) object.message = message.message;\n    return object;\n  };\n\n  /**\n   * Converts this URedirectResult to JSON.\n   * @function toJSON\n   * @memberof URedirectResult\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  URedirectResult.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  /**\n   * Gets the default type url for URedirectResult\n   * @function getTypeUrl\n   * @memberof URedirectResult\n   * @static\n   * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n   * @returns {string} The default type url\n   */\n  URedirectResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n    if (typeUrlPrefix === undefined) {\n      typeUrlPrefix = \"type.googleapis.com\";\n    }\n    return typeUrlPrefix + \"/URedirectResult\";\n  };\n  return URedirectResult;\n}();\n$root.UUserRequest = function () {\n  /**\n   * Properties of a UUserRequest.\n   * @exports IUUserRequest\n   * @interface IUUserRequest\n   * @property {IUQuery|null} [queryCommand] UUserRequest queryCommand\n   * @property {IURedirect|null} [redirectCommand] UUserRequest redirectCommand\n   */\n\n  /**\n   * Constructs a new UUserRequest.\n   * @exports UUserRequest\n   * @classdesc Represents a UUserRequest.\n   * @implements IUUserRequest\n   * @constructor\n   * @param {IUUserRequest=} [properties] Properties to set\n   */\n  function UUserRequest(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n\n  /**\n   * UUserRequest queryCommand.\n   * @member {IUQuery|null|undefined} queryCommand\n   * @memberof UUserRequest\n   * @instance\n   */\n  UUserRequest.prototype.queryCommand = null;\n\n  /**\n   * UUserRequest redirectCommand.\n   * @member {IURedirect|null|undefined} redirectCommand\n   * @memberof UUserRequest\n   * @instance\n   */\n  UUserRequest.prototype.redirectCommand = null;\n\n  /**\n   * Creates a new UUserRequest instance using the specified properties.\n   * @function create\n   * @memberof UUserRequest\n   * @static\n   * @param {IUUserRequest=} [properties] Properties to set\n   * @returns {UUserRequest} UUserRequest instance\n   */\n  UUserRequest.create = function create(properties) {\n    return new UUserRequest(properties);\n  };\n\n  /**\n   * Encodes the specified UUserRequest message. Does not implicitly {@link UUserRequest.verify|verify} messages.\n   * @function encode\n   * @memberof UUserRequest\n   * @static\n   * @param {IUUserRequest} message UUserRequest message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  UUserRequest.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.queryCommand != null && Object.hasOwnProperty.call(message, \"queryCommand\")) $root.UQuery.encode(message.queryCommand, writer.uint32( /* id 1, wireType 2 =*/10).fork()).ldelim();\n    if (message.redirectCommand != null && Object.hasOwnProperty.call(message, \"redirectCommand\")) $root.URedirect.encode(message.redirectCommand, writer.uint32( /* id 2, wireType 2 =*/18).fork()).ldelim();\n    return writer;\n  };\n\n  /**\n   * Encodes the specified UUserRequest message, length delimited. Does not implicitly {@link UUserRequest.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof UUserRequest\n   * @static\n   * @param {IUUserRequest} message UUserRequest message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  UUserRequest.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n\n  /**\n   * Decodes a UUserRequest message from the specified reader or buffer.\n   * @function decode\n   * @memberof UUserRequest\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {UUserRequest} UUserRequest\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  UUserRequest.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.UUserRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          {\n            message.queryCommand = $root.UQuery.decode(reader, reader.uint32());\n            break;\n          }\n        case 2:\n          {\n            message.redirectCommand = $root.URedirect.decode(reader, reader.uint32());\n            break;\n          }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  };\n\n  /**\n   * Decodes a UUserRequest message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof UUserRequest\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {UUserRequest} UUserRequest\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  UUserRequest.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n\n  /**\n   * Verifies a UUserRequest message.\n   * @function verify\n   * @memberof UUserRequest\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  UUserRequest.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.queryCommand != null && message.hasOwnProperty(\"queryCommand\")) {\n      var error = $root.UQuery.verify(message.queryCommand);\n      if (error) return \"queryCommand.\" + error;\n    }\n    if (message.redirectCommand != null && message.hasOwnProperty(\"redirectCommand\")) {\n      var error = $root.URedirect.verify(message.redirectCommand);\n      if (error) return \"redirectCommand.\" + error;\n    }\n    return null;\n  };\n\n  /**\n   * Creates a UUserRequest message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof UUserRequest\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {UUserRequest} UUserRequest\n   */\n  UUserRequest.fromObject = function fromObject(object) {\n    if (object instanceof $root.UUserRequest) return object;\n    var message = new $root.UUserRequest();\n    if (object.queryCommand != null) {\n      if (typeof object.queryCommand !== \"object\") throw TypeError(\".UUserRequest.queryCommand: object expected\");\n      message.queryCommand = $root.UQuery.fromObject(object.queryCommand);\n    }\n    if (object.redirectCommand != null) {\n      if (typeof object.redirectCommand !== \"object\") throw TypeError(\".UUserRequest.redirectCommand: object expected\");\n      message.redirectCommand = $root.URedirect.fromObject(object.redirectCommand);\n    }\n    return message;\n  };\n\n  /**\n   * Creates a plain object from a UUserRequest message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof UUserRequest\n   * @static\n   * @param {UUserRequest} message UUserRequest\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  UUserRequest.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.defaults) {\n      object.queryCommand = null;\n      object.redirectCommand = null;\n    }\n    if (message.queryCommand != null && message.hasOwnProperty(\"queryCommand\")) object.queryCommand = $root.UQuery.toObject(message.queryCommand, options);\n    if (message.redirectCommand != null && message.hasOwnProperty(\"redirectCommand\")) object.redirectCommand = $root.URedirect.toObject(message.redirectCommand, options);\n    return object;\n  };\n\n  /**\n   * Converts this UUserRequest to JSON.\n   * @function toJSON\n   * @memberof UUserRequest\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  UUserRequest.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  /**\n   * Gets the default type url for UUserRequest\n   * @function getTypeUrl\n   * @memberof UUserRequest\n   * @static\n   * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n   * @returns {string} The default type url\n   */\n  UUserRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n    if (typeUrlPrefix === undefined) {\n      typeUrlPrefix = \"type.googleapis.com\";\n    }\n    return typeUrlPrefix + \"/UUserRequest\";\n  };\n  return UUserRequest;\n}();\n$root.UUserResponse = function () {\n  /**\n   * Properties of a UUserResponse.\n   * @exports IUUserResponse\n   * @interface IUUserResponse\n   * @property {IUQueryResult|null} [queryResult] UUserResponse queryResult\n   * @property {IURedirectResult|null} [redirectResult] UUserResponse redirectResult\n   */\n\n  /**\n   * Constructs a new UUserResponse.\n   * @exports UUserResponse\n   * @classdesc Represents a UUserResponse.\n   * @implements IUUserResponse\n   * @constructor\n   * @param {IUUserResponse=} [properties] Properties to set\n   */\n  function UUserResponse(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n  }\n\n  /**\n   * UUserResponse queryResult.\n   * @member {IUQueryResult|null|undefined} queryResult\n   * @memberof UUserResponse\n   * @instance\n   */\n  UUserResponse.prototype.queryResult = null;\n\n  /**\n   * UUserResponse redirectResult.\n   * @member {IURedirectResult|null|undefined} redirectResult\n   * @memberof UUserResponse\n   * @instance\n   */\n  UUserResponse.prototype.redirectResult = null;\n\n  /**\n   * Creates a new UUserResponse instance using the specified properties.\n   * @function create\n   * @memberof UUserResponse\n   * @static\n   * @param {IUUserResponse=} [properties] Properties to set\n   * @returns {UUserResponse} UUserResponse instance\n   */\n  UUserResponse.create = function create(properties) {\n    return new UUserResponse(properties);\n  };\n\n  /**\n   * Encodes the specified UUserResponse message. Does not implicitly {@link UUserResponse.verify|verify} messages.\n   * @function encode\n   * @memberof UUserResponse\n   * @static\n   * @param {IUUserResponse} message UUserResponse message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  UUserResponse.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.queryResult != null && Object.hasOwnProperty.call(message, \"queryResult\")) $root.UQueryResult.encode(message.queryResult, writer.uint32( /* id 1, wireType 2 =*/10).fork()).ldelim();\n    if (message.redirectResult != null && Object.hasOwnProperty.call(message, \"redirectResult\")) $root.URedirectResult.encode(message.redirectResult, writer.uint32( /* id 2, wireType 2 =*/18).fork()).ldelim();\n    return writer;\n  };\n\n  /**\n   * Encodes the specified UUserResponse message, length delimited. Does not implicitly {@link UUserResponse.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof UUserResponse\n   * @static\n   * @param {IUUserResponse} message UUserResponse message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  UUserResponse.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n\n  /**\n   * Decodes a UUserResponse message from the specified reader or buffer.\n   * @function decode\n   * @memberof UUserResponse\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {UUserResponse} UUserResponse\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  UUserResponse.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n      message = new $root.UUserResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          {\n            message.queryResult = $root.UQueryResult.decode(reader, reader.uint32());\n            break;\n          }\n        case 2:\n          {\n            message.redirectResult = $root.URedirectResult.decode(reader, reader.uint32());\n            break;\n          }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  };\n\n  /**\n   * Decodes a UUserResponse message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof UUserResponse\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {UUserResponse} UUserResponse\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  UUserResponse.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n\n  /**\n   * Verifies a UUserResponse message.\n   * @function verify\n   * @memberof UUserResponse\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n  UUserResponse.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.queryResult != null && message.hasOwnProperty(\"queryResult\")) {\n      var error = $root.UQueryResult.verify(message.queryResult);\n      if (error) return \"queryResult.\" + error;\n    }\n    if (message.redirectResult != null && message.hasOwnProperty(\"redirectResult\")) {\n      var error = $root.URedirectResult.verify(message.redirectResult);\n      if (error) return \"redirectResult.\" + error;\n    }\n    return null;\n  };\n\n  /**\n   * Creates a UUserResponse message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof UUserResponse\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {UUserResponse} UUserResponse\n   */\n  UUserResponse.fromObject = function fromObject(object) {\n    if (object instanceof $root.UUserResponse) return object;\n    var message = new $root.UUserResponse();\n    if (object.queryResult != null) {\n      if (typeof object.queryResult !== \"object\") throw TypeError(\".UUserResponse.queryResult: object expected\");\n      message.queryResult = $root.UQueryResult.fromObject(object.queryResult);\n    }\n    if (object.redirectResult != null) {\n      if (typeof object.redirectResult !== \"object\") throw TypeError(\".UUserResponse.redirectResult: object expected\");\n      message.redirectResult = $root.URedirectResult.fromObject(object.redirectResult);\n    }\n    return message;\n  };\n\n  /**\n   * Creates a plain object from a UUserResponse message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof UUserResponse\n   * @static\n   * @param {UUserResponse} message UUserResponse\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  UUserResponse.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n    if (options.defaults) {\n      object.queryResult = null;\n      object.redirectResult = null;\n    }\n    if (message.queryResult != null && message.hasOwnProperty(\"queryResult\")) object.queryResult = $root.UQueryResult.toObject(message.queryResult, options);\n    if (message.redirectResult != null && message.hasOwnProperty(\"redirectResult\")) object.redirectResult = $root.URedirectResult.toObject(message.redirectResult, options);\n    return object;\n  };\n\n  /**\n   * Converts this UUserResponse to JSON.\n   * @function toJSON\n   * @memberof UUserResponse\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  UUserResponse.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  /**\n   * Gets the default type url for UUserResponse\n   * @function getTypeUrl\n   * @memberof UUserResponse\n   * @static\n   * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n   * @returns {string} The default type url\n   */\n  UUserResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n    if (typeUrlPrefix === undefined) {\n      typeUrlPrefix = \"type.googleapis.com\";\n    }\n    return typeUrlPrefix + \"/UUserResponse\";\n  };\n  return UUserResponse;\n}();\nmodule.exports = $root;","map":{"version":3,"names":["require","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","UPackage","properties","keys","Object","i","length","prototype","id","Long","fromBits","status","description","itemCount","x","y","create","encode","message","writer","uint32","int64","string","int32","encodeDelimited","ldelim","decode","reader","end","undefined","len","pos","tag","skipType","hasOwnProperty","ProtocolError","instance","decodeDelimited","verify","isInteger","low","high","isString","fromObject","object","fromValue","unsigned","parseInt","LongBits","toNumber","String","toObject","options","defaults","long","longs","toString","Number","call","toJSON","constructor","toJSONOptions","getTypeUrl","typeUrlPrefix","UQuery","packageId","userId","UQueryResult","emptyArray","ack","fork","push","Array","isArray","error","TypeError","arrays","j","URedirect","URedirectResult","UUserRequest","queryCommand","redirectCommand","UUserResponse","queryResult","redirectResult","module","exports"],"sources":["/Users/bhc/erss-hwk5-sq44-hb147/ups_frontend/src/ups_user_pb.js"],"sourcesContent":["/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.UPackage = (function() {\n\n    /**\n     * Properties of a UPackage.\n     * @exports IUPackage\n     * @interface IUPackage\n     * @property {number|Long} id UPackage id\n     * @property {string} status UPackage status\n     * @property {string} description UPackage description\n     * @property {number} itemCount UPackage itemCount\n     * @property {number} x UPackage x\n     * @property {number} y UPackage y\n     */\n\n    /**\n     * Constructs a new UPackage.\n     * @exports UPackage\n     * @classdesc Represents a UPackage.\n     * @implements IUPackage\n     * @constructor\n     * @param {IUPackage=} [properties] Properties to set\n     */\n    function UPackage(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * UPackage id.\n     * @member {number|Long} id\n     * @memberof UPackage\n     * @instance\n     */\n    UPackage.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * UPackage status.\n     * @member {string} status\n     * @memberof UPackage\n     * @instance\n     */\n    UPackage.prototype.status = \"\";\n\n    /**\n     * UPackage description.\n     * @member {string} description\n     * @memberof UPackage\n     * @instance\n     */\n    UPackage.prototype.description = \"\";\n\n    /**\n     * UPackage itemCount.\n     * @member {number} itemCount\n     * @memberof UPackage\n     * @instance\n     */\n    UPackage.prototype.itemCount = 0;\n\n    /**\n     * UPackage x.\n     * @member {number} x\n     * @memberof UPackage\n     * @instance\n     */\n    UPackage.prototype.x = 0;\n\n    /**\n     * UPackage y.\n     * @member {number} y\n     * @memberof UPackage\n     * @instance\n     */\n    UPackage.prototype.y = 0;\n\n    /**\n     * Creates a new UPackage instance using the specified properties.\n     * @function create\n     * @memberof UPackage\n     * @static\n     * @param {IUPackage=} [properties] Properties to set\n     * @returns {UPackage} UPackage instance\n     */\n    UPackage.create = function create(properties) {\n        return new UPackage(properties);\n    };\n\n    /**\n     * Encodes the specified UPackage message. Does not implicitly {@link UPackage.verify|verify} messages.\n     * @function encode\n     * @memberof UPackage\n     * @static\n     * @param {IUPackage} message UPackage message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UPackage.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.id);\n        writer.uint32(/* id 2, wireType 2 =*/18).string(message.status);\n        writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);\n        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.itemCount);\n        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.x);\n        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.y);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified UPackage message, length delimited. Does not implicitly {@link UPackage.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof UPackage\n     * @static\n     * @param {IUPackage} message UPackage message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UPackage.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a UPackage message from the specified reader or buffer.\n     * @function decode\n     * @memberof UPackage\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {UPackage} UPackage\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UPackage.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.UPackage();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1: {\n                    message.id = reader.int64();\n                    break;\n                }\n            case 2: {\n                    message.status = reader.string();\n                    break;\n                }\n            case 3: {\n                    message.description = reader.string();\n                    break;\n                }\n            case 4: {\n                    message.itemCount = reader.int32();\n                    break;\n                }\n            case 5: {\n                    message.x = reader.int32();\n                    break;\n                }\n            case 6: {\n                    message.y = reader.int32();\n                    break;\n                }\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        if (!message.hasOwnProperty(\"id\"))\n            throw $util.ProtocolError(\"missing required 'id'\", { instance: message });\n        if (!message.hasOwnProperty(\"status\"))\n            throw $util.ProtocolError(\"missing required 'status'\", { instance: message });\n        if (!message.hasOwnProperty(\"description\"))\n            throw $util.ProtocolError(\"missing required 'description'\", { instance: message });\n        if (!message.hasOwnProperty(\"itemCount\"))\n            throw $util.ProtocolError(\"missing required 'itemCount'\", { instance: message });\n        if (!message.hasOwnProperty(\"x\"))\n            throw $util.ProtocolError(\"missing required 'x'\", { instance: message });\n        if (!message.hasOwnProperty(\"y\"))\n            throw $util.ProtocolError(\"missing required 'y'\", { instance: message });\n        return message;\n    };\n\n    /**\n     * Decodes a UPackage message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof UPackage\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {UPackage} UPackage\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UPackage.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a UPackage message.\n     * @function verify\n     * @memberof UPackage\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    UPackage.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))\n            return \"id: integer|Long expected\";\n        if (!$util.isString(message.status))\n            return \"status: string expected\";\n        if (!$util.isString(message.description))\n            return \"description: string expected\";\n        if (!$util.isInteger(message.itemCount))\n            return \"itemCount: integer expected\";\n        if (!$util.isInteger(message.x))\n            return \"x: integer expected\";\n        if (!$util.isInteger(message.y))\n            return \"y: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a UPackage message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UPackage\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {UPackage} UPackage\n     */\n    UPackage.fromObject = function fromObject(object) {\n        if (object instanceof $root.UPackage)\n            return object;\n        var message = new $root.UPackage();\n        if (object.id != null)\n            if ($util.Long)\n                (message.id = $util.Long.fromValue(object.id)).unsigned = false;\n            else if (typeof object.id === \"string\")\n                message.id = parseInt(object.id, 10);\n            else if (typeof object.id === \"number\")\n                message.id = object.id;\n            else if (typeof object.id === \"object\")\n                message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber();\n        if (object.status != null)\n            message.status = String(object.status);\n        if (object.description != null)\n            message.description = String(object.description);\n        if (object.itemCount != null)\n            message.itemCount = object.itemCount | 0;\n        if (object.x != null)\n            message.x = object.x | 0;\n        if (object.y != null)\n            message.y = object.y | 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a UPackage message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UPackage\n     * @static\n     * @param {UPackage} message UPackage\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UPackage.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.id = options.longs === String ? \"0\" : 0;\n            object.status = \"\";\n            object.description = \"\";\n            object.itemCount = 0;\n            object.x = 0;\n            object.y = 0;\n        }\n        if (message.id != null && message.hasOwnProperty(\"id\"))\n            if (typeof message.id === \"number\")\n                object.id = options.longs === String ? String(message.id) : message.id;\n            else\n                object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber() : message.id;\n        if (message.status != null && message.hasOwnProperty(\"status\"))\n            object.status = message.status;\n        if (message.description != null && message.hasOwnProperty(\"description\"))\n            object.description = message.description;\n        if (message.itemCount != null && message.hasOwnProperty(\"itemCount\"))\n            object.itemCount = message.itemCount;\n        if (message.x != null && message.hasOwnProperty(\"x\"))\n            object.x = message.x;\n        if (message.y != null && message.hasOwnProperty(\"y\"))\n            object.y = message.y;\n        return object;\n    };\n\n    /**\n     * Converts this UPackage to JSON.\n     * @function toJSON\n     * @memberof UPackage\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UPackage.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Gets the default type url for UPackage\n     * @function getTypeUrl\n     * @memberof UPackage\n     * @static\n     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n     * @returns {string} The default type url\n     */\n    UPackage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n        if (typeUrlPrefix === undefined) {\n            typeUrlPrefix = \"type.googleapis.com\";\n        }\n        return typeUrlPrefix + \"/UPackage\";\n    };\n\n    return UPackage;\n})();\n\n$root.UQuery = (function() {\n\n    /**\n     * Properties of a UQuery.\n     * @exports IUQuery\n     * @interface IUQuery\n     * @property {number|Long|null} [packageId] UQuery packageId\n     * @property {number|null} [userId] UQuery userId\n     */\n\n    /**\n     * Constructs a new UQuery.\n     * @exports UQuery\n     * @classdesc Represents a UQuery.\n     * @implements IUQuery\n     * @constructor\n     * @param {IUQuery=} [properties] Properties to set\n     */\n    function UQuery(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * UQuery packageId.\n     * @member {number|Long} packageId\n     * @memberof UQuery\n     * @instance\n     */\n    UQuery.prototype.packageId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * UQuery userId.\n     * @member {number} userId\n     * @memberof UQuery\n     * @instance\n     */\n    UQuery.prototype.userId = 0;\n\n    /**\n     * Creates a new UQuery instance using the specified properties.\n     * @function create\n     * @memberof UQuery\n     * @static\n     * @param {IUQuery=} [properties] Properties to set\n     * @returns {UQuery} UQuery instance\n     */\n    UQuery.create = function create(properties) {\n        return new UQuery(properties);\n    };\n\n    /**\n     * Encodes the specified UQuery message. Does not implicitly {@link UQuery.verify|verify} messages.\n     * @function encode\n     * @memberof UQuery\n     * @static\n     * @param {IUQuery} message UQuery message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UQuery.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.packageId != null && Object.hasOwnProperty.call(message, \"packageId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int64(message.packageId);\n        if (message.userId != null && Object.hasOwnProperty.call(message, \"userId\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.userId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified UQuery message, length delimited. Does not implicitly {@link UQuery.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof UQuery\n     * @static\n     * @param {IUQuery} message UQuery message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UQuery.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a UQuery message from the specified reader or buffer.\n     * @function decode\n     * @memberof UQuery\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {UQuery} UQuery\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UQuery.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.UQuery();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1: {\n                    message.packageId = reader.int64();\n                    break;\n                }\n            case 2: {\n                    message.userId = reader.int32();\n                    break;\n                }\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a UQuery message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof UQuery\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {UQuery} UQuery\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UQuery.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a UQuery message.\n     * @function verify\n     * @memberof UQuery\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    UQuery.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.packageId != null && message.hasOwnProperty(\"packageId\"))\n            if (!$util.isInteger(message.packageId) && !(message.packageId && $util.isInteger(message.packageId.low) && $util.isInteger(message.packageId.high)))\n                return \"packageId: integer|Long expected\";\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            if (!$util.isInteger(message.userId))\n                return \"userId: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a UQuery message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UQuery\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {UQuery} UQuery\n     */\n    UQuery.fromObject = function fromObject(object) {\n        if (object instanceof $root.UQuery)\n            return object;\n        var message = new $root.UQuery();\n        if (object.packageId != null)\n            if ($util.Long)\n                (message.packageId = $util.Long.fromValue(object.packageId)).unsigned = false;\n            else if (typeof object.packageId === \"string\")\n                message.packageId = parseInt(object.packageId, 10);\n            else if (typeof object.packageId === \"number\")\n                message.packageId = object.packageId;\n            else if (typeof object.packageId === \"object\")\n                message.packageId = new $util.LongBits(object.packageId.low >>> 0, object.packageId.high >>> 0).toNumber();\n        if (object.userId != null)\n            message.userId = object.userId | 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a UQuery message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UQuery\n     * @static\n     * @param {UQuery} message UQuery\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UQuery.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.packageId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.packageId = options.longs === String ? \"0\" : 0;\n            object.userId = 0;\n        }\n        if (message.packageId != null && message.hasOwnProperty(\"packageId\"))\n            if (typeof message.packageId === \"number\")\n                object.packageId = options.longs === String ? String(message.packageId) : message.packageId;\n            else\n                object.packageId = options.longs === String ? $util.Long.prototype.toString.call(message.packageId) : options.longs === Number ? new $util.LongBits(message.packageId.low >>> 0, message.packageId.high >>> 0).toNumber() : message.packageId;\n        if (message.userId != null && message.hasOwnProperty(\"userId\"))\n            object.userId = message.userId;\n        return object;\n    };\n\n    /**\n     * Converts this UQuery to JSON.\n     * @function toJSON\n     * @memberof UQuery\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UQuery.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Gets the default type url for UQuery\n     * @function getTypeUrl\n     * @memberof UQuery\n     * @static\n     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n     * @returns {string} The default type url\n     */\n    UQuery.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n        if (typeUrlPrefix === undefined) {\n            typeUrlPrefix = \"type.googleapis.com\";\n        }\n        return typeUrlPrefix + \"/UQuery\";\n    };\n\n    return UQuery;\n})();\n\n$root.UQueryResult = (function() {\n\n    /**\n     * Properties of a UQueryResult.\n     * @exports IUQueryResult\n     * @interface IUQueryResult\n     * @property {Array.<IUPackage>|null} [\"package\"] UQueryResult package\n     * @property {number} ack UQueryResult ack\n     */\n\n    /**\n     * Constructs a new UQueryResult.\n     * @exports UQueryResult\n     * @classdesc Represents a UQueryResult.\n     * @implements IUQueryResult\n     * @constructor\n     * @param {IUQueryResult=} [properties] Properties to set\n     */\n    function UQueryResult(properties) {\n        this[\"package\"] = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * UQueryResult package.\n     * @member {Array.<IUPackage>} package\n     * @memberof UQueryResult\n     * @instance\n     */\n    UQueryResult.prototype[\"package\"] = $util.emptyArray;\n\n    /**\n     * UQueryResult ack.\n     * @member {number} ack\n     * @memberof UQueryResult\n     * @instance\n     */\n    UQueryResult.prototype.ack = 0;\n\n    /**\n     * Creates a new UQueryResult instance using the specified properties.\n     * @function create\n     * @memberof UQueryResult\n     * @static\n     * @param {IUQueryResult=} [properties] Properties to set\n     * @returns {UQueryResult} UQueryResult instance\n     */\n    UQueryResult.create = function create(properties) {\n        return new UQueryResult(properties);\n    };\n\n    /**\n     * Encodes the specified UQueryResult message. Does not implicitly {@link UQueryResult.verify|verify} messages.\n     * @function encode\n     * @memberof UQueryResult\n     * @static\n     * @param {IUQueryResult} message UQueryResult message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UQueryResult.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message[\"package\"] != null && message[\"package\"].length)\n            for (var i = 0; i < message[\"package\"].length; ++i)\n                $root.UPackage.encode(message[\"package\"][i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.ack);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified UQueryResult message, length delimited. Does not implicitly {@link UQueryResult.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof UQueryResult\n     * @static\n     * @param {IUQueryResult} message UQueryResult message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UQueryResult.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a UQueryResult message from the specified reader or buffer.\n     * @function decode\n     * @memberof UQueryResult\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {UQueryResult} UQueryResult\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UQueryResult.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.UQueryResult();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1: {\n                    if (!(message[\"package\"] && message[\"package\"].length))\n                        message[\"package\"] = [];\n                    message[\"package\"].push($root.UPackage.decode(reader, reader.uint32()));\n                    break;\n                }\n            case 2: {\n                    message.ack = reader.int32();\n                    break;\n                }\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        if (!message.hasOwnProperty(\"ack\"))\n            throw $util.ProtocolError(\"missing required 'ack'\", { instance: message });\n        return message;\n    };\n\n    /**\n     * Decodes a UQueryResult message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof UQueryResult\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {UQueryResult} UQueryResult\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UQueryResult.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a UQueryResult message.\n     * @function verify\n     * @memberof UQueryResult\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    UQueryResult.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message[\"package\"] != null && message.hasOwnProperty(\"package\")) {\n            if (!Array.isArray(message[\"package\"]))\n                return \"package: array expected\";\n            for (var i = 0; i < message[\"package\"].length; ++i) {\n                var error = $root.UPackage.verify(message[\"package\"][i]);\n                if (error)\n                    return \"package.\" + error;\n            }\n        }\n        if (!$util.isInteger(message.ack))\n            return \"ack: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a UQueryResult message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UQueryResult\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {UQueryResult} UQueryResult\n     */\n    UQueryResult.fromObject = function fromObject(object) {\n        if (object instanceof $root.UQueryResult)\n            return object;\n        var message = new $root.UQueryResult();\n        if (object[\"package\"]) {\n            if (!Array.isArray(object[\"package\"]))\n                throw TypeError(\".UQueryResult.package: array expected\");\n            message[\"package\"] = [];\n            for (var i = 0; i < object[\"package\"].length; ++i) {\n                if (typeof object[\"package\"][i] !== \"object\")\n                    throw TypeError(\".UQueryResult.package: object expected\");\n                message[\"package\"][i] = $root.UPackage.fromObject(object[\"package\"][i]);\n            }\n        }\n        if (object.ack != null)\n            message.ack = object.ack | 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a UQueryResult message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UQueryResult\n     * @static\n     * @param {UQueryResult} message UQueryResult\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UQueryResult.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object[\"package\"] = [];\n        if (options.defaults)\n            object.ack = 0;\n        if (message[\"package\"] && message[\"package\"].length) {\n            object[\"package\"] = [];\n            for (var j = 0; j < message[\"package\"].length; ++j)\n                object[\"package\"][j] = $root.UPackage.toObject(message[\"package\"][j], options);\n        }\n        if (message.ack != null && message.hasOwnProperty(\"ack\"))\n            object.ack = message.ack;\n        return object;\n    };\n\n    /**\n     * Converts this UQueryResult to JSON.\n     * @function toJSON\n     * @memberof UQueryResult\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UQueryResult.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Gets the default type url for UQueryResult\n     * @function getTypeUrl\n     * @memberof UQueryResult\n     * @static\n     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n     * @returns {string} The default type url\n     */\n    UQueryResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n        if (typeUrlPrefix === undefined) {\n            typeUrlPrefix = \"type.googleapis.com\";\n        }\n        return typeUrlPrefix + \"/UQueryResult\";\n    };\n\n    return UQueryResult;\n})();\n\n$root.URedirect = (function() {\n\n    /**\n     * Properties of a URedirect.\n     * @exports IURedirect\n     * @interface IURedirect\n     * @property {number|Long} packageId URedirect packageId\n     * @property {number} x URedirect x\n     * @property {number} y URedirect y\n     */\n\n    /**\n     * Constructs a new URedirect.\n     * @exports URedirect\n     * @classdesc Represents a URedirect.\n     * @implements IURedirect\n     * @constructor\n     * @param {IURedirect=} [properties] Properties to set\n     */\n    function URedirect(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * URedirect packageId.\n     * @member {number|Long} packageId\n     * @memberof URedirect\n     * @instance\n     */\n    URedirect.prototype.packageId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * URedirect x.\n     * @member {number} x\n     * @memberof URedirect\n     * @instance\n     */\n    URedirect.prototype.x = 0;\n\n    /**\n     * URedirect y.\n     * @member {number} y\n     * @memberof URedirect\n     * @instance\n     */\n    URedirect.prototype.y = 0;\n\n    /**\n     * Creates a new URedirect instance using the specified properties.\n     * @function create\n     * @memberof URedirect\n     * @static\n     * @param {IURedirect=} [properties] Properties to set\n     * @returns {URedirect} URedirect instance\n     */\n    URedirect.create = function create(properties) {\n        return new URedirect(properties);\n    };\n\n    /**\n     * Encodes the specified URedirect message. Does not implicitly {@link URedirect.verify|verify} messages.\n     * @function encode\n     * @memberof URedirect\n     * @static\n     * @param {IURedirect} message URedirect message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    URedirect.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.packageId);\n        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.x);\n        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.y);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified URedirect message, length delimited. Does not implicitly {@link URedirect.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof URedirect\n     * @static\n     * @param {IURedirect} message URedirect message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    URedirect.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a URedirect message from the specified reader or buffer.\n     * @function decode\n     * @memberof URedirect\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {URedirect} URedirect\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    URedirect.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.URedirect();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1: {\n                    message.packageId = reader.int64();\n                    break;\n                }\n            case 2: {\n                    message.x = reader.int32();\n                    break;\n                }\n            case 3: {\n                    message.y = reader.int32();\n                    break;\n                }\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        if (!message.hasOwnProperty(\"packageId\"))\n            throw $util.ProtocolError(\"missing required 'packageId'\", { instance: message });\n        if (!message.hasOwnProperty(\"x\"))\n            throw $util.ProtocolError(\"missing required 'x'\", { instance: message });\n        if (!message.hasOwnProperty(\"y\"))\n            throw $util.ProtocolError(\"missing required 'y'\", { instance: message });\n        return message;\n    };\n\n    /**\n     * Decodes a URedirect message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof URedirect\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {URedirect} URedirect\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    URedirect.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a URedirect message.\n     * @function verify\n     * @memberof URedirect\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    URedirect.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (!$util.isInteger(message.packageId) && !(message.packageId && $util.isInteger(message.packageId.low) && $util.isInteger(message.packageId.high)))\n            return \"packageId: integer|Long expected\";\n        if (!$util.isInteger(message.x))\n            return \"x: integer expected\";\n        if (!$util.isInteger(message.y))\n            return \"y: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a URedirect message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof URedirect\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {URedirect} URedirect\n     */\n    URedirect.fromObject = function fromObject(object) {\n        if (object instanceof $root.URedirect)\n            return object;\n        var message = new $root.URedirect();\n        if (object.packageId != null)\n            if ($util.Long)\n                (message.packageId = $util.Long.fromValue(object.packageId)).unsigned = false;\n            else if (typeof object.packageId === \"string\")\n                message.packageId = parseInt(object.packageId, 10);\n            else if (typeof object.packageId === \"number\")\n                message.packageId = object.packageId;\n            else if (typeof object.packageId === \"object\")\n                message.packageId = new $util.LongBits(object.packageId.low >>> 0, object.packageId.high >>> 0).toNumber();\n        if (object.x != null)\n            message.x = object.x | 0;\n        if (object.y != null)\n            message.y = object.y | 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a URedirect message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof URedirect\n     * @static\n     * @param {URedirect} message URedirect\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    URedirect.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.packageId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.packageId = options.longs === String ? \"0\" : 0;\n            object.x = 0;\n            object.y = 0;\n        }\n        if (message.packageId != null && message.hasOwnProperty(\"packageId\"))\n            if (typeof message.packageId === \"number\")\n                object.packageId = options.longs === String ? String(message.packageId) : message.packageId;\n            else\n                object.packageId = options.longs === String ? $util.Long.prototype.toString.call(message.packageId) : options.longs === Number ? new $util.LongBits(message.packageId.low >>> 0, message.packageId.high >>> 0).toNumber() : message.packageId;\n        if (message.x != null && message.hasOwnProperty(\"x\"))\n            object.x = message.x;\n        if (message.y != null && message.hasOwnProperty(\"y\"))\n            object.y = message.y;\n        return object;\n    };\n\n    /**\n     * Converts this URedirect to JSON.\n     * @function toJSON\n     * @memberof URedirect\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    URedirect.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Gets the default type url for URedirect\n     * @function getTypeUrl\n     * @memberof URedirect\n     * @static\n     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n     * @returns {string} The default type url\n     */\n    URedirect.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n        if (typeUrlPrefix === undefined) {\n            typeUrlPrefix = \"type.googleapis.com\";\n        }\n        return typeUrlPrefix + \"/URedirect\";\n    };\n\n    return URedirect;\n})();\n\n$root.URedirectResult = (function() {\n\n    /**\n     * Properties of a URedirectResult.\n     * @exports IURedirectResult\n     * @interface IURedirectResult\n     * @property {string} message URedirectResult message\n     */\n\n    /**\n     * Constructs a new URedirectResult.\n     * @exports URedirectResult\n     * @classdesc Represents a URedirectResult.\n     * @implements IURedirectResult\n     * @constructor\n     * @param {IURedirectResult=} [properties] Properties to set\n     */\n    function URedirectResult(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * URedirectResult message.\n     * @member {string} message\n     * @memberof URedirectResult\n     * @instance\n     */\n    URedirectResult.prototype.message = \"\";\n\n    /**\n     * Creates a new URedirectResult instance using the specified properties.\n     * @function create\n     * @memberof URedirectResult\n     * @static\n     * @param {IURedirectResult=} [properties] Properties to set\n     * @returns {URedirectResult} URedirectResult instance\n     */\n    URedirectResult.create = function create(properties) {\n        return new URedirectResult(properties);\n    };\n\n    /**\n     * Encodes the specified URedirectResult message. Does not implicitly {@link URedirectResult.verify|verify} messages.\n     * @function encode\n     * @memberof URedirectResult\n     * @static\n     * @param {IURedirectResult} message URedirectResult message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    URedirectResult.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        writer.uint32(/* id 1, wireType 2 =*/10).string(message.message);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified URedirectResult message, length delimited. Does not implicitly {@link URedirectResult.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof URedirectResult\n     * @static\n     * @param {IURedirectResult} message URedirectResult message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    URedirectResult.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a URedirectResult message from the specified reader or buffer.\n     * @function decode\n     * @memberof URedirectResult\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {URedirectResult} URedirectResult\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    URedirectResult.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.URedirectResult();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1: {\n                    message.message = reader.string();\n                    break;\n                }\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        if (!message.hasOwnProperty(\"message\"))\n            throw $util.ProtocolError(\"missing required 'message'\", { instance: message });\n        return message;\n    };\n\n    /**\n     * Decodes a URedirectResult message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof URedirectResult\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {URedirectResult} URedirectResult\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    URedirectResult.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a URedirectResult message.\n     * @function verify\n     * @memberof URedirectResult\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    URedirectResult.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (!$util.isString(message.message))\n            return \"message: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a URedirectResult message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof URedirectResult\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {URedirectResult} URedirectResult\n     */\n    URedirectResult.fromObject = function fromObject(object) {\n        if (object instanceof $root.URedirectResult)\n            return object;\n        var message = new $root.URedirectResult();\n        if (object.message != null)\n            message.message = String(object.message);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a URedirectResult message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof URedirectResult\n     * @static\n     * @param {URedirectResult} message URedirectResult\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    URedirectResult.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.message = \"\";\n        if (message.message != null && message.hasOwnProperty(\"message\"))\n            object.message = message.message;\n        return object;\n    };\n\n    /**\n     * Converts this URedirectResult to JSON.\n     * @function toJSON\n     * @memberof URedirectResult\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    URedirectResult.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Gets the default type url for URedirectResult\n     * @function getTypeUrl\n     * @memberof URedirectResult\n     * @static\n     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n     * @returns {string} The default type url\n     */\n    URedirectResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n        if (typeUrlPrefix === undefined) {\n            typeUrlPrefix = \"type.googleapis.com\";\n        }\n        return typeUrlPrefix + \"/URedirectResult\";\n    };\n\n    return URedirectResult;\n})();\n\n$root.UUserRequest = (function() {\n\n    /**\n     * Properties of a UUserRequest.\n     * @exports IUUserRequest\n     * @interface IUUserRequest\n     * @property {IUQuery|null} [queryCommand] UUserRequest queryCommand\n     * @property {IURedirect|null} [redirectCommand] UUserRequest redirectCommand\n     */\n\n    /**\n     * Constructs a new UUserRequest.\n     * @exports UUserRequest\n     * @classdesc Represents a UUserRequest.\n     * @implements IUUserRequest\n     * @constructor\n     * @param {IUUserRequest=} [properties] Properties to set\n     */\n    function UUserRequest(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * UUserRequest queryCommand.\n     * @member {IUQuery|null|undefined} queryCommand\n     * @memberof UUserRequest\n     * @instance\n     */\n    UUserRequest.prototype.queryCommand = null;\n\n    /**\n     * UUserRequest redirectCommand.\n     * @member {IURedirect|null|undefined} redirectCommand\n     * @memberof UUserRequest\n     * @instance\n     */\n    UUserRequest.prototype.redirectCommand = null;\n\n    /**\n     * Creates a new UUserRequest instance using the specified properties.\n     * @function create\n     * @memberof UUserRequest\n     * @static\n     * @param {IUUserRequest=} [properties] Properties to set\n     * @returns {UUserRequest} UUserRequest instance\n     */\n    UUserRequest.create = function create(properties) {\n        return new UUserRequest(properties);\n    };\n\n    /**\n     * Encodes the specified UUserRequest message. Does not implicitly {@link UUserRequest.verify|verify} messages.\n     * @function encode\n     * @memberof UUserRequest\n     * @static\n     * @param {IUUserRequest} message UUserRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UUserRequest.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.queryCommand != null && Object.hasOwnProperty.call(message, \"queryCommand\"))\n            $root.UQuery.encode(message.queryCommand, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.redirectCommand != null && Object.hasOwnProperty.call(message, \"redirectCommand\"))\n            $root.URedirect.encode(message.redirectCommand, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified UUserRequest message, length delimited. Does not implicitly {@link UUserRequest.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof UUserRequest\n     * @static\n     * @param {IUUserRequest} message UUserRequest message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UUserRequest.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a UUserRequest message from the specified reader or buffer.\n     * @function decode\n     * @memberof UUserRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {UUserRequest} UUserRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UUserRequest.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.UUserRequest();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1: {\n                    message.queryCommand = $root.UQuery.decode(reader, reader.uint32());\n                    break;\n                }\n            case 2: {\n                    message.redirectCommand = $root.URedirect.decode(reader, reader.uint32());\n                    break;\n                }\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a UUserRequest message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof UUserRequest\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {UUserRequest} UUserRequest\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UUserRequest.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a UUserRequest message.\n     * @function verify\n     * @memberof UUserRequest\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    UUserRequest.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.queryCommand != null && message.hasOwnProperty(\"queryCommand\")) {\n            var error = $root.UQuery.verify(message.queryCommand);\n            if (error)\n                return \"queryCommand.\" + error;\n        }\n        if (message.redirectCommand != null && message.hasOwnProperty(\"redirectCommand\")) {\n            var error = $root.URedirect.verify(message.redirectCommand);\n            if (error)\n                return \"redirectCommand.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a UUserRequest message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UUserRequest\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {UUserRequest} UUserRequest\n     */\n    UUserRequest.fromObject = function fromObject(object) {\n        if (object instanceof $root.UUserRequest)\n            return object;\n        var message = new $root.UUserRequest();\n        if (object.queryCommand != null) {\n            if (typeof object.queryCommand !== \"object\")\n                throw TypeError(\".UUserRequest.queryCommand: object expected\");\n            message.queryCommand = $root.UQuery.fromObject(object.queryCommand);\n        }\n        if (object.redirectCommand != null) {\n            if (typeof object.redirectCommand !== \"object\")\n                throw TypeError(\".UUserRequest.redirectCommand: object expected\");\n            message.redirectCommand = $root.URedirect.fromObject(object.redirectCommand);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a UUserRequest message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UUserRequest\n     * @static\n     * @param {UUserRequest} message UUserRequest\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UUserRequest.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.queryCommand = null;\n            object.redirectCommand = null;\n        }\n        if (message.queryCommand != null && message.hasOwnProperty(\"queryCommand\"))\n            object.queryCommand = $root.UQuery.toObject(message.queryCommand, options);\n        if (message.redirectCommand != null && message.hasOwnProperty(\"redirectCommand\"))\n            object.redirectCommand = $root.URedirect.toObject(message.redirectCommand, options);\n        return object;\n    };\n\n    /**\n     * Converts this UUserRequest to JSON.\n     * @function toJSON\n     * @memberof UUserRequest\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UUserRequest.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Gets the default type url for UUserRequest\n     * @function getTypeUrl\n     * @memberof UUserRequest\n     * @static\n     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n     * @returns {string} The default type url\n     */\n    UUserRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n        if (typeUrlPrefix === undefined) {\n            typeUrlPrefix = \"type.googleapis.com\";\n        }\n        return typeUrlPrefix + \"/UUserRequest\";\n    };\n\n    return UUserRequest;\n})();\n\n$root.UUserResponse = (function() {\n\n    /**\n     * Properties of a UUserResponse.\n     * @exports IUUserResponse\n     * @interface IUUserResponse\n     * @property {IUQueryResult|null} [queryResult] UUserResponse queryResult\n     * @property {IURedirectResult|null} [redirectResult] UUserResponse redirectResult\n     */\n\n    /**\n     * Constructs a new UUserResponse.\n     * @exports UUserResponse\n     * @classdesc Represents a UUserResponse.\n     * @implements IUUserResponse\n     * @constructor\n     * @param {IUUserResponse=} [properties] Properties to set\n     */\n    function UUserResponse(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * UUserResponse queryResult.\n     * @member {IUQueryResult|null|undefined} queryResult\n     * @memberof UUserResponse\n     * @instance\n     */\n    UUserResponse.prototype.queryResult = null;\n\n    /**\n     * UUserResponse redirectResult.\n     * @member {IURedirectResult|null|undefined} redirectResult\n     * @memberof UUserResponse\n     * @instance\n     */\n    UUserResponse.prototype.redirectResult = null;\n\n    /**\n     * Creates a new UUserResponse instance using the specified properties.\n     * @function create\n     * @memberof UUserResponse\n     * @static\n     * @param {IUUserResponse=} [properties] Properties to set\n     * @returns {UUserResponse} UUserResponse instance\n     */\n    UUserResponse.create = function create(properties) {\n        return new UUserResponse(properties);\n    };\n\n    /**\n     * Encodes the specified UUserResponse message. Does not implicitly {@link UUserResponse.verify|verify} messages.\n     * @function encode\n     * @memberof UUserResponse\n     * @static\n     * @param {IUUserResponse} message UUserResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UUserResponse.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.queryResult != null && Object.hasOwnProperty.call(message, \"queryResult\"))\n            $root.UQueryResult.encode(message.queryResult, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.redirectResult != null && Object.hasOwnProperty.call(message, \"redirectResult\"))\n            $root.URedirectResult.encode(message.redirectResult, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified UUserResponse message, length delimited. Does not implicitly {@link UUserResponse.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof UUserResponse\n     * @static\n     * @param {IUUserResponse} message UUserResponse message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UUserResponse.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a UUserResponse message from the specified reader or buffer.\n     * @function decode\n     * @memberof UUserResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {UUserResponse} UUserResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UUserResponse.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.UUserResponse();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1: {\n                    message.queryResult = $root.UQueryResult.decode(reader, reader.uint32());\n                    break;\n                }\n            case 2: {\n                    message.redirectResult = $root.URedirectResult.decode(reader, reader.uint32());\n                    break;\n                }\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a UUserResponse message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof UUserResponse\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {UUserResponse} UUserResponse\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UUserResponse.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a UUserResponse message.\n     * @function verify\n     * @memberof UUserResponse\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    UUserResponse.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.queryResult != null && message.hasOwnProperty(\"queryResult\")) {\n            var error = $root.UQueryResult.verify(message.queryResult);\n            if (error)\n                return \"queryResult.\" + error;\n        }\n        if (message.redirectResult != null && message.hasOwnProperty(\"redirectResult\")) {\n            var error = $root.URedirectResult.verify(message.redirectResult);\n            if (error)\n                return \"redirectResult.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a UUserResponse message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UUserResponse\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {UUserResponse} UUserResponse\n     */\n    UUserResponse.fromObject = function fromObject(object) {\n        if (object instanceof $root.UUserResponse)\n            return object;\n        var message = new $root.UUserResponse();\n        if (object.queryResult != null) {\n            if (typeof object.queryResult !== \"object\")\n                throw TypeError(\".UUserResponse.queryResult: object expected\");\n            message.queryResult = $root.UQueryResult.fromObject(object.queryResult);\n        }\n        if (object.redirectResult != null) {\n            if (typeof object.redirectResult !== \"object\")\n                throw TypeError(\".UUserResponse.redirectResult: object expected\");\n            message.redirectResult = $root.URedirectResult.fromObject(object.redirectResult);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a UUserResponse message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UUserResponse\n     * @static\n     * @param {UUserResponse} message UUserResponse\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UUserResponse.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.queryResult = null;\n            object.redirectResult = null;\n        }\n        if (message.queryResult != null && message.hasOwnProperty(\"queryResult\"))\n            object.queryResult = $root.UQueryResult.toObject(message.queryResult, options);\n        if (message.redirectResult != null && message.hasOwnProperty(\"redirectResult\"))\n            object.redirectResult = $root.URedirectResult.toObject(message.redirectResult, options);\n        return object;\n    };\n\n    /**\n     * Converts this UUserResponse to JSON.\n     * @function toJSON\n     * @memberof UUserResponse\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UUserResponse.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Gets the default type url for UUserResponse\n     * @function getTypeUrl\n     * @memberof UUserResponse\n     * @static\n     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n     * @returns {string} The default type url\n     */\n    UUserResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n        if (typeUrlPrefix === undefined) {\n            typeUrlPrefix = \"type.googleapis.com\";\n        }\n        return typeUrlPrefix + \"/UUserResponse\";\n    };\n\n    return UUserResponse;\n})();\n\nmodule.exports = $root;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}