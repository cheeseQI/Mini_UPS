{"ast":null,"code":"/* eslint-disable */\nimport { UUserRequest, UQuery } from \"@/ups_user_pb\";\nimport { inject } from \"vue\";\nexport default {\n  data() {\n    return {\n      packageId: '',\n      userId: '',\n      socket: new WebSocket('ws://vcm-33571.vm.duke.edu:1029')\n    };\n  },\n  // setup() {\n  //     const socket = inject('$socket');\n  //     socket.on('connect', () => {\n  //         console.log('WebSocket connected successfully.');\n  //     });\n  //\n  //     // 监听连接失败事件\n  //     socket.on('connect_error', (error) => {\n  //         console.error('WebSocket connection error:', error);\n  //     });\n  //\n  //     // 监听自定义的消息发送确认事件（在服务器端实现）\n  //     socket.on('query', () => {\n  //         console.log('Message sent successfully.');\n  //     });\n  //     return { socket };\n  // },\n  methods: {\n    sendMessage(message) {\n      this.socket.send(message);\n    },\n    async queryOrder() {\n      console.log(\"query Start!\");\n      console.log(this.packageId);\n      console.log(this.userId);\n      const query = new UQuery();\n      query.setPackageid(this.packageId);\n      query.setPackageid(this.userId);\n      // this.socket =;\n      console.log(\"mesg send Start!\");\n      const request = new UUserRequest();\n      request.setQuerycommand(query);\n      const binary = request.serializeBinary();\n      console.log(binary);\n      this.sendMessage(binary);\n      console.log('Message sent finished.');\n    }\n  }\n};","map":{"version":3,"names":["UUserRequest","UQuery","inject","data","packageId","userId","socket","WebSocket","methods","sendMessage","message","send","queryOrder","console","log","query","setPackageid","request","setQuerycommand","binary","serializeBinary"],"sources":["/Users/bhc/erss-hwk5-sq44-hb147/ups_frontend/src/components/QueryOrder.vue"],"sourcesContent":["<template>\n    <div>\n        <h1>Query Order</h1>\n        <form @submit.prevent=\"queryOrder\">\n            <label for=\"packageId\">Package ID:</label>\n            <input v-model=\"packageId\" type=\"text\" id=\"packageId\" name=\"packageId\" />\n            <br />\n            <label for=\"userId\">User ID:</label>\n            <input v-model=\"userId\" type=\"text\" id=\"userId\" name=\"userId\" />\n            <br />\n            <button type=\"submit\">Query Order</button>\n        </form>\n    </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport {\n    UUserRequest,\n    UQuery,\n} from \"@/ups_user_pb\";\nimport {inject} from \"vue\";\n\nexport default {\n    data() {\n        return {\n            packageId: '',\n            userId: '',\n            socket:  new WebSocket('ws://vcm-33571.vm.duke.edu:1029'),\n        };\n    },\n    // setup() {\n    //     const socket = inject('$socket');\n    //     socket.on('connect', () => {\n    //         console.log('WebSocket connected successfully.');\n    //     });\n    //\n    //     // 监听连接失败事件\n    //     socket.on('connect_error', (error) => {\n    //         console.error('WebSocket connection error:', error);\n    //     });\n    //\n    //     // 监听自定义的消息发送确认事件（在服务器端实现）\n    //     socket.on('query', () => {\n    //         console.log('Message sent successfully.');\n    //     });\n    //     return { socket };\n    // },\n    methods: {\n        sendMessage(message) {\n            this.socket.send(message);\n        },\n        async queryOrder() {\n            console.log(\"query Start!\");\n            console.log(this.packageId);\n            console.log(this.userId);\n            const query = new UQuery();\n            query.setPackageid(this.packageId);\n            query.setPackageid(this.userId);\n            // this.socket =;\n            console.log(\"mesg send Start!\");\n            const request = new UUserRequest();\n            request.setQuerycommand(query);\n            const binary = request.serializeBinary();\n            console.log(binary);\n            this.sendMessage(binary);\n            console.log('Message sent finished.');\n        },\n    },\n};\n</script>\n"],"mappings":"AAgBA;AACA,SACIA,YAAY,EACZC,MAAM,QACH,eAAe;AACtB,SAAQC,MAAM,QAAO,KAAK;AAE1B,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAG,IAAIC,SAAS,CAAC,iCAAiC;IAC5D,CAAC;EACL,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE;IACLC,WAAWA,CAACC,OAAO,EAAE;MACjB,IAAI,CAACJ,MAAM,CAACK,IAAI,CAACD,OAAO,CAAC;IAC7B,CAAC;IACD,MAAME,UAAUA,CAAA,EAAG;MACfC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3BD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,SAAS,CAAC;MAC3BS,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,MAAM,CAAC;MACxB,MAAMU,KAAI,GAAI,IAAId,MAAM,EAAE;MAC1Bc,KAAK,CAACC,YAAY,CAAC,IAAI,CAACZ,SAAS,CAAC;MAClCW,KAAK,CAACC,YAAY,CAAC,IAAI,CAACX,MAAM,CAAC;MAC/B;MACAQ,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/B,MAAMG,OAAM,GAAI,IAAIjB,YAAY,EAAE;MAClCiB,OAAO,CAACC,eAAe,CAACH,KAAK,CAAC;MAC9B,MAAMI,MAAK,GAAIF,OAAO,CAACG,eAAe,EAAE;MACxCP,OAAO,CAACC,GAAG,CAACK,MAAM,CAAC;MACnB,IAAI,CAACV,WAAW,CAACU,MAAM,CAAC;MACxBN,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACzC;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}